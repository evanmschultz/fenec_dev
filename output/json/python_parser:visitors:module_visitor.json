{
    "file_path": "./python_parser/visitors/module_visitor.py",
    "docstring": null,
    "header": [],
    "footer": [],
    "imports": [
        {
            "import_names": [
                {
                    "name": "Union",
                    "as_name": null,
                    "local_block_id": null
                }
            ],
            "imported_from": "typing",
            "import_module_type": "STANDARD_LIBRARY",
            "local_module_id": null
        },
        {
            "import_names": [
                {
                    "name": "libcst",
                    "as_name": null,
                    "local_block_id": null
                }
            ],
            "imported_from": null,
            "import_module_type": "THIRD_PARTY",
            "local_module_id": null
        },
        {
            "import_names": [
                {
                    "name": "ClassIDGenerationStrategy",
                    "as_name": null,
                    "local_block_id": ".:python_parser:id_generation:id_generation_strategies.py__*__MODULE__*__CLASS-ClassIDGenerationStrategy"
                },
                {
                    "name": "FunctionIDGenerationStrategy",
                    "as_name": null,
                    "local_block_id": ".:python_parser:id_generation:id_generation_strategies.py__*__MODULE__*__CLASS-FunctionIDGenerationStrategy"
                }
            ],
            "imported_from": "id_generation.id_generation_strategies",
            "import_module_type": "LOCAL",
            "local_module_id": ".:python_parser:id_generation:id_generation_strategies.py__*__MODULE"
        },
        {
            "import_names": [
                {
                    "name": "BuilderFactory",
                    "as_name": null,
                    "local_block_id": ".:python_parser:model_builders:builder_factory.py__*__MODULE__*__CLASS-BuilderFactory"
                }
            ],
            "imported_from": "model_builders.builder_factory",
            "import_module_type": "LOCAL",
            "local_module_id": ".:python_parser:model_builders:builder_factory.py__*__MODULE"
        },
        {
            "import_names": [
                {
                    "name": "ClassModelBuilder",
                    "as_name": null,
                    "local_block_id": ".:python_parser:model_builders:class_model_builder.py__*__MODULE__*__CLASS-ClassModelBuilder"
                }
            ],
            "imported_from": "model_builders.class_model_builder",
            "import_module_type": "LOCAL",
            "local_module_id": ".:python_parser:model_builders:class_model_builder.py__*__MODULE"
        },
        {
            "import_names": [
                {
                    "name": "FunctionModelBuilder",
                    "as_name": null,
                    "local_block_id": ".:python_parser:model_builders:function_model_builder.py__*__MODULE__*__CLASS-FunctionModelBuilder"
                }
            ],
            "imported_from": "model_builders.function_model_builder",
            "import_module_type": "LOCAL",
            "local_module_id": ".:python_parser:model_builders:function_model_builder.py__*__MODULE"
        },
        {
            "import_names": [
                {
                    "name": "ModuleModelBuilder",
                    "as_name": null,
                    "local_block_id": ".:python_parser:model_builders:module_model_builder.py__*__MODULE__*__CLASS-ModuleModelBuilder"
                }
            ],
            "imported_from": "model_builders.module_model_builder",
            "import_module_type": "LOCAL",
            "local_module_id": ".:python_parser:model_builders:module_model_builder.py__*__MODULE"
        },
        {
            "import_names": [
                {
                    "name": "BlockType",
                    "as_name": null,
                    "local_block_id": ".:python_parser:models:enums.py__*__MODULE__*__CLASS-BlockType"
                }
            ],
            "imported_from": "models.enums",
            "import_module_type": "LOCAL",
            "local_module_id": ".:python_parser:models:enums.py__*__MODULE"
        },
        {
            "import_names": [
                {
                    "name": "ImportModel",
                    "as_name": null,
                    "local_block_id": ".:python_parser:models:models.py__*__MODULE__*__CLASS-ImportModel"
                },
                {
                    "name": "ParameterListModel",
                    "as_name": null,
                    "local_block_id": ".:python_parser:models:models.py__*__MODULE__*__CLASS-ParameterListModel"
                }
            ],
            "imported_from": "models.models",
            "import_module_type": "LOCAL",
            "local_module_id": ".:python_parser:models:models.py__*__MODULE"
        },
        {
            "import_names": [
                {
                    "name": "BaseVisitor",
                    "as_name": null,
                    "local_block_id": ".:python_parser:visitors:base_code_block_visitor.py__*__MODULE__*__CLASS-BaseVisitor"
                }
            ],
            "imported_from": "visitors.base_code_block_visitor",
            "import_module_type": "LOCAL",
            "local_module_id": ".:python_parser:visitors:base_code_block_visitor.py__*__MODULE"
        },
        {
            "import_names": [
                {
                    "name": "process_class_def",
                    "as_name": null,
                    "local_block_id": ".:python_parser:visitors:node_processing:class_def_functions.py__*__MODULE__*__FUNCTION-process_class_def"
                }
            ],
            "imported_from": "visitors.node_processing.class_def_functions",
            "import_module_type": "LOCAL",
            "local_module_id": ".:python_parser:visitors:node_processing:class_def_functions.py__*__MODULE"
        },
        {
            "import_names": [
                {
                    "name": "gather_and_set_children_dependencies",
                    "as_name": null,
                    "local_block_id": ".:python_parser:visitors:node_processing:gather_dependencies.py__*__MODULE__*__FUNCTION-gather_and_set_children_dependencies"
                }
            ],
            "imported_from": "visitors.node_processing.gather_dependencies",
            "import_module_type": "LOCAL",
            "local_module_id": ".:python_parser:visitors:node_processing:gather_dependencies.py__*__MODULE"
        },
        {
            "import_names": [
                {
                    "name": "process_func_def",
                    "as_name": null,
                    "local_block_id": ".:python_parser:visitors:node_processing:function_def_functions.py__*__MODULE__*__FUNCTION-process_func_def"
                },
                {
                    "name": "process_parameters",
                    "as_name": null,
                    "local_block_id": ".:python_parser:visitors:node_processing:function_def_functions.py__*__MODULE__*__FUNCTION-process_parameters"
                }
            ],
            "imported_from": "visitors.node_processing.function_def_functions",
            "import_module_type": "LOCAL",
            "local_module_id": ".:python_parser:visitors:node_processing:function_def_functions.py__*__MODULE"
        },
        {
            "import_names": [
                {
                    "name": "extract_content_from_empty_lines",
                    "as_name": null,
                    "local_block_id": ".:python_parser:visitors:node_processing:module_functions.py__*__MODULE__*__FUNCTION-extract_content_from_empty_lines"
                },
                {
                    "name": "process_import",
                    "as_name": null,
                    "local_block_id": ".:python_parser:visitors:node_processing:module_functions.py__*__MODULE__*__FUNCTION-process_import"
                },
                {
                    "name": "process_import_from",
                    "as_name": null,
                    "local_block_id": ".:python_parser:visitors:node_processing:module_functions.py__*__MODULE__*__FUNCTION-process_import_from"
                }
            ],
            "imported_from": "visitors.node_processing.module_functions",
            "import_module_type": "LOCAL",
            "local_module_id": ".:python_parser:visitors:node_processing:module_functions.py__*__MODULE"
        },
        {
            "import_names": [
                {
                    "name": "PositionData",
                    "as_name": null,
                    "local_block_id": ".:python_parser:utilities:processing_context.py__*__MODULE__*__CLASS-PositionData"
                },
                {
                    "name": "NodeAndPositionData",
                    "as_name": null,
                    "local_block_id": ".:python_parser:utilities:processing_context.py__*__MODULE__*__CLASS-NodeAndPositionData"
                }
            ],
            "imported_from": "utilities.processing_context",
            "import_module_type": "LOCAL",
            "local_module_id": ".:python_parser:utilities:processing_context.py__*__MODULE"
        },
        {
            "import_names": [
                {
                    "name": "gather_standalone_lines",
                    "as_name": null,
                    "local_block_id": ".:python_parser:visitors:node_processing:standalone_code_block_functions.py__*__MODULE__*__FUNCTION-gather_standalone_lines"
                },
                {
                    "name": "process_standalone_blocks",
                    "as_name": null,
                    "local_block_id": ".:python_parser:visitors:node_processing:standalone_code_block_functions.py__*__MODULE__*__FUNCTION-process_standalone_blocks"
                }
            ],
            "imported_from": "visitors.node_processing.standalone_code_block_functions",
            "import_module_type": "LOCAL",
            "local_module_id": ".:python_parser:visitors:node_processing:standalone_code_block_functions.py__*__MODULE"
        }
    ],
    "id": ".:python_parser:visitors:module_visitor.py__*__MODULE",
    "parent_id": null,
    "block_type": "MODULE",
    "start_line_num": 1,
    "end_line_num": 212,
    "code_content": "from typing import Union\nimport libcst\n\nfrom id_generation.id_generation_strategies import (\n    ClassIDGenerationStrategy,\n    FunctionIDGenerationStrategy,\n)\n\nfrom model_builders.builder_factory import BuilderFactory\nfrom model_builders.class_model_builder import ClassModelBuilder\nfrom model_builders.function_model_builder import FunctionModelBuilder\nfrom model_builders.module_model_builder import ModuleModelBuilder\n\nfrom models.enums import BlockType\nfrom models.models import (\n    ImportModel,\n    ParameterListModel,\n)\nfrom visitors.base_code_block_visitor import BaseVisitor\nfrom visitors.node_processing.class_def_functions import (\n    process_class_def,\n)\nfrom visitors.node_processing.gather_dependencies import (\n    gather_and_set_children_dependencies,\n)\nfrom visitors.node_processing.function_def_functions import (\n    process_func_def,\n    process_parameters,\n)\nfrom visitors.node_processing.module_functions import (\n    extract_content_from_empty_lines,\n    process_import,\n    process_import_from,\n)\nfrom utilities.processing_context import (\n    NodeAndPositionData,\n    PositionData,\n)\nfrom visitors.node_processing.standalone_code_block_functions import (\n    gather_standalone_lines,\n    process_standalone_blocks,\n)\n\n\nBuilderType = Union[ModuleModelBuilder, ClassModelBuilder, FunctionModelBuilder]\n\n\nclass ModuleVisitor(BaseVisitor):\n    \"\"\"\n    Visitor class for traversing and building a model of a Python module.\n\n    This class extends BaseVisitor and is used to visit different nodes in a Python module's abstract\n    syntax tree (CST) using the libcst library. It builds a structured model of the module, including\n    imports, classes, and functions.\n\n    Attributes:\n        id (str): The ID of the module to be generated before instantiation.\n        builder (ModuleModelBuilder): The builder used to construct the module model.\n\n    Example:\n        >>> module_builder = ModuleModelBuilder(id=\"module1\", name=\"example_module\")\n        >>> visitor = ModuleVisitor(id=\"module1\", module_builder=module_builder)\n        >>> libcst.parse_module(\"import os\\\\nclass MyClass:\\\\n    pass\").visit(visitor)\n        # This will process the module and build its corresponding model using the provided module builder.\n    \"\"\"\n\n    def __init__(self, id: str, module_builder: ModuleModelBuilder) -> None:\n        super().__init__(id=id)\n        self.builder: ModuleModelBuilder = module_builder\n        self.builder_stack.append(module_builder)\n\n    def visit_Module(self, node: libcst.Module) -> bool | None:\n        \"\"\"\n        Visits the root Module node of the CST.\n\n        Extracts various components of the module such as docstring, header, footer, and code content, and\n        updates the module builder with these details.\n        \"\"\"\n\n        docstring: str | None = node.get_docstring()\n        header: list[str] = extract_content_from_empty_lines(node.header)\n        footer: list[str] = extract_content_from_empty_lines(node.footer)\n        content: str = node.code if node.code else \"\"\n        position_data: PositionData = self.get_node_position_data(node)\n        (\n            self.builder.set_docstring(docstring)\n            .set_header_content(header)\n            .set_footer_content(footer)\n            .set_code_content(content)\n            .set_start_line_num(position_data.start)\n            .set_end_line_num(position_data.end)\n        )\n        standalone_blocks: list[NodeAndPositionData] = gather_standalone_lines(\n            node.body, self\n        )\n        standalone_block_models = process_standalone_blocks(\n            code_blocks=standalone_blocks, parent_id=self.id\n        )\n        for standalone_block_model in standalone_block_models:\n            self.builder.add_child(standalone_block_model)\n\n    def visit_Import(self, node: libcst.Import) -> None:\n        \"\"\"\n        Visits an Import node in the CST.\n\n        Processes the import statement and updates the module builder with the import model.\n        \"\"\"\n\n        import_model: ImportModel = process_import(node)\n        self.builder.add_import(import_model)\n\n    def visit_ImportFrom(self, node: libcst.ImportFrom) -> None:\n        \"\"\"\n        Visits an ImportFrom node in the CST.\n\n        Processes the 'from ... import ...' statement and updates the module builder with the import model.\n        \"\"\"\n\n        import_model: ImportModel = process_import_from(node)\n        self.builder.add_import(import_model)\n\n    def visit_ClassDef(self, node: libcst.ClassDef) -> None:\n        \"\"\"\n        Visits a ClassDef node in the CST.\n\n        Initiates the process of building a class model from the class definition.\n        \"\"\"\n\n        parent_id: str = self.builder_stack[-1].id\n        class_id: str = ClassIDGenerationStrategy.generate_id(\n            parent_id=parent_id, class_name=node.name.value\n        )\n\n        class_builder: ClassModelBuilder = BuilderFactory.create_builder_instance(\n            block_type=BlockType.CLASS,\n            id=class_id,\n            name=node.name.value,\n            parent_id=parent_id,\n        )\n\n        builder: ClassModelBuilder = self.builder_stack[-1]  # type: ignore\n        builder.add_child(class_builder)\n        self.builder_stack.append(class_builder)\n\n        position_data: PositionData = self.get_node_position_data(node)\n        process_class_def(node, position_data, class_builder)\n\n    def leave_ClassDef(self, original_node: libcst.ClassDef) -> None:\n        \"\"\"\n        Leaves a ClassDef node in the CST.\n\n        Finalizes the class model building process by popping the current builder from the stack.\n        \"\"\"\n\n        self.builder_stack.pop()\n\n    def visit_FunctionDef(self, node: libcst.FunctionDef) -> None:\n        \"\"\"\n        Visits a FunctionDef node in the CST.\n\n        Initiates the process of building a function model from the function definition.\n        \"\"\"\n\n        parent_id: str = self.builder_stack[-1].id\n        func_id: str = FunctionIDGenerationStrategy.generate_id(\n            parent_id=parent_id, function_name=node.name.value\n        )\n\n        func_builder: FunctionModelBuilder = BuilderFactory.create_builder_instance(\n            block_type=BlockType.FUNCTION,\n            id=func_id,\n            name=node.name.value,\n            parent_id=parent_id,\n        )\n        builder: FunctionModelBuilder = self.builder_stack[-1]  # type: ignore\n        builder.add_child(func_builder)\n        self.builder_stack.append(func_builder)\n\n        position_data: PositionData = self.get_node_position_data(node)\n        process_func_def(func_id, node, position_data, func_builder)\n\n    def visit_Parameters(self, node: libcst.Parameters) -> None:\n        \"\"\"\n        Visits a Parameters node in the CST.\n\n        Processes the parameters of a function and updates the current function model builder with these parameters.\n        \"\"\"\n\n        builder = self.builder_stack[-1]\n        parameter_list: ParameterListModel | None = process_parameters(node)\n\n        if isinstance(builder, FunctionModelBuilder):\n            builder.set_parameters_list(parameter_list)  # type: ignore\n\n    def leave_FunctionDef(self, original_node: libcst.FunctionDef) -> None:\n        \"\"\"\n        Leaves a FunctionDef node in the CST.\n\n        Finalizes the function model building process by popping the current builder from the stack.\n        \"\"\"\n\n        self.builder_stack.pop()\n\n    def leave_Module(self, original_node: libcst.Module) -> None:\n        \"\"\"\n        Leaves the root Module node in the CST.\n\n        Finalizes the module model building process by setting dependencies for children of the module.\n        \"\"\"\n\n        gather_and_set_children_dependencies(self.builder)\n",
    "important_comments": null,
    "dependencies": null,
    "summary": "summary complete",
    "children": [
        {
            "variable_assignments": [
                "BuilderType = Union[ModuleModelBuilder, ClassModelBuilder, FunctionModelBuilder]"
            ],
            "id": ".:python_parser:visitors:module_visitor.py__*__MODULE__*__STANDALONE_BLOCK-1",
            "parent_id": ".:python_parser:visitors:module_visitor.py__*__MODULE",
            "block_type": "STANDALONE_BLOCK",
            "start_line_num": 43,
            "end_line_num": 46,
            "code_content": "BuilderType = Union[ModuleModelBuilder, ClassModelBuilder, FunctionModelBuilder]\n",
            "important_comments": null,
            "dependencies": [
                {
                    "import_names": [
                        {
                            "name": "Union",
                            "as_name": null,
                            "local_block_id": null
                        }
                    ],
                    "imported_from": "typing",
                    "import_module_type": "STANDARD_LIBRARY",
                    "local_module_id": null
                },
                {
                    "import_names": [
                        {
                            "name": "ClassModelBuilder",
                            "as_name": null,
                            "local_block_id": ".:python_parser:model_builders:class_model_builder.py__*__MODULE__*__CLASS-ClassModelBuilder"
                        }
                    ],
                    "imported_from": "model_builders.class_model_builder",
                    "import_module_type": "LOCAL",
                    "local_module_id": ".:python_parser:model_builders:class_model_builder.py__*__MODULE"
                },
                {
                    "import_names": [
                        {
                            "name": "FunctionModelBuilder",
                            "as_name": null,
                            "local_block_id": ".:python_parser:model_builders:function_model_builder.py__*__MODULE__*__CLASS-FunctionModelBuilder"
                        }
                    ],
                    "imported_from": "model_builders.function_model_builder",
                    "import_module_type": "LOCAL",
                    "local_module_id": ".:python_parser:model_builders:function_model_builder.py__*__MODULE"
                },
                {
                    "import_names": [
                        {
                            "name": "ModuleModelBuilder",
                            "as_name": null,
                            "local_block_id": ".:python_parser:model_builders:module_model_builder.py__*__MODULE__*__CLASS-ModuleModelBuilder"
                        }
                    ],
                    "imported_from": "model_builders.module_model_builder",
                    "import_module_type": "LOCAL",
                    "local_module_id": ".:python_parser:model_builders:module_model_builder.py__*__MODULE"
                }
            ],
            "summary": "summary complete",
            "children": null
        },
        {
            "class_name": "ModuleVisitor",
            "decorators": null,
            "bases": [
                "BaseVisitor"
            ],
            "docstring": "Visitor class for traversing and building a model of a Python module.\n\nThis class extends BaseVisitor and is used to visit different nodes in a Python module's abstract\nsyntax tree (CST) using the libcst library. It builds a structured model of the module, including\nimports, classes, and functions.\n\nAttributes:\n    id (str): The ID of the module to be generated before instantiation.\n    builder (ModuleModelBuilder): The builder used to construct the module model.\n\nExample:\n    >>> module_builder = ModuleModelBuilder(id=\"module1\", name=\"example_module\")\n    >>> visitor = ModuleVisitor(id=\"module1\", module_builder=module_builder)\n    >>> libcst.parse_module(\"import os\\nclass MyClass:\\n    pass\").visit(visitor)\n    # This will process the module and build its corresponding model using the provided module builder.",
            "attributes": null,
            "keywords": null,
            "id": ".:python_parser:visitors:module_visitor.py__*__MODULE__*__CLASS-ModuleVisitor",
            "parent_id": ".:python_parser:visitors:module_visitor.py__*__MODULE",
            "block_type": "CLASS",
            "start_line_num": 46,
            "end_line_num": 212,
            "code_content": "\n\nclass ModuleVisitor(BaseVisitor):\n    \"\"\"\n    Visitor class for traversing and building a model of a Python module.\n\n    This class extends BaseVisitor and is used to visit different nodes in a Python module's abstract\n    syntax tree (CST) using the libcst library. It builds a structured model of the module, including\n    imports, classes, and functions.\n\n    Attributes:\n        id (str): The ID of the module to be generated before instantiation.\n        builder (ModuleModelBuilder): The builder used to construct the module model.\n\n    Example:\n        >>> module_builder = ModuleModelBuilder(id=\"module1\", name=\"example_module\")\n        >>> visitor = ModuleVisitor(id=\"module1\", module_builder=module_builder)\n        >>> libcst.parse_module(\"import os\\\\nclass MyClass:\\\\n    pass\").visit(visitor)\n        # This will process the module and build its corresponding model using the provided module builder.\n    \"\"\"\n\n    def __init__(self, id: str, module_builder: ModuleModelBuilder) -> None:\n        super().__init__(id=id)\n        self.builder: ModuleModelBuilder = module_builder\n        self.builder_stack.append(module_builder)\n\n    def visit_Module(self, node: libcst.Module) -> bool | None:\n        \"\"\"\n        Visits the root Module node of the CST.\n\n        Extracts various components of the module such as docstring, header, footer, and code content, and\n        updates the module builder with these details.\n        \"\"\"\n\n        docstring: str | None = node.get_docstring()\n        header: list[str] = extract_content_from_empty_lines(node.header)\n        footer: list[str] = extract_content_from_empty_lines(node.footer)\n        content: str = node.code if node.code else \"\"\n        position_data: PositionData = self.get_node_position_data(node)\n        (\n            self.builder.set_docstring(docstring)\n            .set_header_content(header)\n            .set_footer_content(footer)\n            .set_code_content(content)\n            .set_start_line_num(position_data.start)\n            .set_end_line_num(position_data.end)\n        )\n        standalone_blocks: list[NodeAndPositionData] = gather_standalone_lines(\n            node.body, self\n        )\n        standalone_block_models = process_standalone_blocks(\n            code_blocks=standalone_blocks, parent_id=self.id\n        )\n        for standalone_block_model in standalone_block_models:\n            self.builder.add_child(standalone_block_model)\n\n    def visit_Import(self, node: libcst.Import) -> None:\n        \"\"\"\n        Visits an Import node in the CST.\n\n        Processes the import statement and updates the module builder with the import model.\n        \"\"\"\n\n        import_model: ImportModel = process_import(node)\n        self.builder.add_import(import_model)\n\n    def visit_ImportFrom(self, node: libcst.ImportFrom) -> None:\n        \"\"\"\n        Visits an ImportFrom node in the CST.\n\n        Processes the 'from ... import ...' statement and updates the module builder with the import model.\n        \"\"\"\n\n        import_model: ImportModel = process_import_from(node)\n        self.builder.add_import(import_model)\n\n    def visit_ClassDef(self, node: libcst.ClassDef) -> None:\n        \"\"\"\n        Visits a ClassDef node in the CST.\n\n        Initiates the process of building a class model from the class definition.\n        \"\"\"\n\n        parent_id: str = self.builder_stack[-1].id\n        class_id: str = ClassIDGenerationStrategy.generate_id(\n            parent_id=parent_id, class_name=node.name.value\n        )\n\n        class_builder: ClassModelBuilder = BuilderFactory.create_builder_instance(\n            block_type=BlockType.CLASS,\n            id=class_id,\n            name=node.name.value,\n            parent_id=parent_id,\n        )\n\n        builder: ClassModelBuilder = self.builder_stack[-1]  # type: ignore\n        builder.add_child(class_builder)\n        self.builder_stack.append(class_builder)\n\n        position_data: PositionData = self.get_node_position_data(node)\n        process_class_def(node, position_data, class_builder)\n\n    def leave_ClassDef(self, original_node: libcst.ClassDef) -> None:\n        \"\"\"\n        Leaves a ClassDef node in the CST.\n\n        Finalizes the class model building process by popping the current builder from the stack.\n        \"\"\"\n\n        self.builder_stack.pop()\n\n    def visit_FunctionDef(self, node: libcst.FunctionDef) -> None:\n        \"\"\"\n        Visits a FunctionDef node in the CST.\n\n        Initiates the process of building a function model from the function definition.\n        \"\"\"\n\n        parent_id: str = self.builder_stack[-1].id\n        func_id: str = FunctionIDGenerationStrategy.generate_id(\n            parent_id=parent_id, function_name=node.name.value\n        )\n\n        func_builder: FunctionModelBuilder = BuilderFactory.create_builder_instance(\n            block_type=BlockType.FUNCTION,\n            id=func_id,\n            name=node.name.value,\n            parent_id=parent_id,\n        )\n        builder: FunctionModelBuilder = self.builder_stack[-1]  # type: ignore\n        builder.add_child(func_builder)\n        self.builder_stack.append(func_builder)\n\n        position_data: PositionData = self.get_node_position_data(node)\n        process_func_def(func_id, node, position_data, func_builder)\n\n    def visit_Parameters(self, node: libcst.Parameters) -> None:\n        \"\"\"\n        Visits a Parameters node in the CST.\n\n        Processes the parameters of a function and updates the current function model builder with these parameters.\n        \"\"\"\n\n        builder = self.builder_stack[-1]\n        parameter_list: ParameterListModel | None = process_parameters(node)\n\n        if isinstance(builder, FunctionModelBuilder):\n            builder.set_parameters_list(parameter_list)  # type: ignore\n\n    def leave_FunctionDef(self, original_node: libcst.FunctionDef) -> None:\n        \"\"\"\n        Leaves a FunctionDef node in the CST.\n\n        Finalizes the function model building process by popping the current builder from the stack.\n        \"\"\"\n\n        self.builder_stack.pop()\n\n    def leave_Module(self, original_node: libcst.Module) -> None:\n        \"\"\"\n        Leaves the root Module node in the CST.\n\n        Finalizes the module model building process by setting dependencies for children of the module.\n        \"\"\"\n\n        gather_and_set_children_dependencies(self.builder)\n",
            "important_comments": null,
            "dependencies": [
                {
                    "import_names": [
                        {
                            "name": "NodeAndPositionData",
                            "as_name": null,
                            "local_block_id": null
                        },
                        {
                            "name": "PositionData",
                            "as_name": null,
                            "local_block_id": null
                        }
                    ],
                    "imported_from": "utilities.processing_context",
                    "import_module_type": "LOCAL",
                    "local_module_id": null
                },
                {
                    "import_names": [
                        {
                            "name": "NodeAndPositionData",
                            "as_name": null,
                            "local_block_id": null
                        },
                        {
                            "name": "PositionData",
                            "as_name": null,
                            "local_block_id": null
                        }
                    ],
                    "imported_from": "utilities.processing_context",
                    "import_module_type": "LOCAL",
                    "local_module_id": null
                },
                {
                    "import_names": [
                        {
                            "name": "libcst",
                            "as_name": null,
                            "local_block_id": null
                        }
                    ],
                    "imported_from": null,
                    "import_module_type": "THIRD_PARTY",
                    "local_module_id": null
                },
                {
                    "import_names": [
                        {
                            "name": "ClassIDGenerationStrategy",
                            "as_name": null,
                            "local_block_id": ".:python_parser:id_generation:id_generation_strategies.py__*__MODULE__*__CLASS-ClassIDGenerationStrategy"
                        },
                        {
                            "name": "FunctionIDGenerationStrategy",
                            "as_name": null,
                            "local_block_id": ".:python_parser:id_generation:id_generation_strategies.py__*__MODULE__*__CLASS-FunctionIDGenerationStrategy"
                        }
                    ],
                    "imported_from": "id_generation.id_generation_strategies",
                    "import_module_type": "LOCAL",
                    "local_module_id": ".:python_parser:id_generation:id_generation_strategies.py__*__MODULE"
                },
                {
                    "import_names": [
                        {
                            "name": "ClassIDGenerationStrategy",
                            "as_name": null,
                            "local_block_id": ".:python_parser:id_generation:id_generation_strategies.py__*__MODULE__*__CLASS-ClassIDGenerationStrategy"
                        },
                        {
                            "name": "FunctionIDGenerationStrategy",
                            "as_name": null,
                            "local_block_id": ".:python_parser:id_generation:id_generation_strategies.py__*__MODULE__*__CLASS-FunctionIDGenerationStrategy"
                        }
                    ],
                    "imported_from": "id_generation.id_generation_strategies",
                    "import_module_type": "LOCAL",
                    "local_module_id": ".:python_parser:id_generation:id_generation_strategies.py__*__MODULE"
                },
                {
                    "import_names": [
                        {
                            "name": "BuilderFactory",
                            "as_name": null,
                            "local_block_id": ".:python_parser:model_builders:builder_factory.py__*__MODULE__*__CLASS-BuilderFactory"
                        }
                    ],
                    "imported_from": "model_builders.builder_factory",
                    "import_module_type": "LOCAL",
                    "local_module_id": ".:python_parser:model_builders:builder_factory.py__*__MODULE"
                },
                {
                    "import_names": [
                        {
                            "name": "ClassModelBuilder",
                            "as_name": null,
                            "local_block_id": ".:python_parser:model_builders:class_model_builder.py__*__MODULE__*__CLASS-ClassModelBuilder"
                        }
                    ],
                    "imported_from": "model_builders.class_model_builder",
                    "import_module_type": "LOCAL",
                    "local_module_id": ".:python_parser:model_builders:class_model_builder.py__*__MODULE"
                },
                {
                    "import_names": [
                        {
                            "name": "FunctionModelBuilder",
                            "as_name": null,
                            "local_block_id": ".:python_parser:model_builders:function_model_builder.py__*__MODULE__*__CLASS-FunctionModelBuilder"
                        }
                    ],
                    "imported_from": "model_builders.function_model_builder",
                    "import_module_type": "LOCAL",
                    "local_module_id": ".:python_parser:model_builders:function_model_builder.py__*__MODULE"
                },
                {
                    "import_names": [
                        {
                            "name": "ModuleModelBuilder",
                            "as_name": null,
                            "local_block_id": ".:python_parser:model_builders:module_model_builder.py__*__MODULE__*__CLASS-ModuleModelBuilder"
                        }
                    ],
                    "imported_from": "model_builders.module_model_builder",
                    "import_module_type": "LOCAL",
                    "local_module_id": ".:python_parser:model_builders:module_model_builder.py__*__MODULE"
                },
                {
                    "import_names": [
                        {
                            "name": "BlockType",
                            "as_name": null,
                            "local_block_id": ".:python_parser:models:enums.py__*__MODULE__*__CLASS-BlockType"
                        }
                    ],
                    "imported_from": "models.enums",
                    "import_module_type": "LOCAL",
                    "local_module_id": ".:python_parser:models:enums.py__*__MODULE"
                },
                {
                    "import_names": [
                        {
                            "name": "ImportModel",
                            "as_name": null,
                            "local_block_id": ".:python_parser:models:models.py__*__MODULE__*__CLASS-ImportModel"
                        },
                        {
                            "name": "ParameterListModel",
                            "as_name": null,
                            "local_block_id": ".:python_parser:models:models.py__*__MODULE__*__CLASS-ParameterListModel"
                        }
                    ],
                    "imported_from": "models.models",
                    "import_module_type": "LOCAL",
                    "local_module_id": ".:python_parser:models:models.py__*__MODULE"
                },
                {
                    "import_names": [
                        {
                            "name": "ImportModel",
                            "as_name": null,
                            "local_block_id": ".:python_parser:models:models.py__*__MODULE__*__CLASS-ImportModel"
                        },
                        {
                            "name": "ParameterListModel",
                            "as_name": null,
                            "local_block_id": ".:python_parser:models:models.py__*__MODULE__*__CLASS-ParameterListModel"
                        }
                    ],
                    "imported_from": "models.models",
                    "import_module_type": "LOCAL",
                    "local_module_id": ".:python_parser:models:models.py__*__MODULE"
                },
                {
                    "import_names": [
                        {
                            "name": "BaseVisitor",
                            "as_name": null,
                            "local_block_id": ".:python_parser:visitors:base_code_block_visitor.py__*__MODULE__*__CLASS-BaseVisitor"
                        }
                    ],
                    "imported_from": "visitors.base_code_block_visitor",
                    "import_module_type": "LOCAL",
                    "local_module_id": ".:python_parser:visitors:base_code_block_visitor.py__*__MODULE"
                },
                {
                    "import_names": [
                        {
                            "name": "process_class_def",
                            "as_name": null,
                            "local_block_id": ".:python_parser:visitors:node_processing:class_def_functions.py__*__MODULE__*__FUNCTION-process_class_def"
                        }
                    ],
                    "imported_from": "visitors.node_processing.class_def_functions",
                    "import_module_type": "LOCAL",
                    "local_module_id": ".:python_parser:visitors:node_processing:class_def_functions.py__*__MODULE"
                },
                {
                    "import_names": [
                        {
                            "name": "gather_and_set_children_dependencies",
                            "as_name": null,
                            "local_block_id": ".:python_parser:visitors:node_processing:gather_dependencies.py__*__MODULE__*__FUNCTION-gather_and_set_children_dependencies"
                        }
                    ],
                    "imported_from": "visitors.node_processing.gather_dependencies",
                    "import_module_type": "LOCAL",
                    "local_module_id": ".:python_parser:visitors:node_processing:gather_dependencies.py__*__MODULE"
                },
                {
                    "import_names": [
                        {
                            "name": "process_func_def",
                            "as_name": null,
                            "local_block_id": ".:python_parser:visitors:node_processing:function_def_functions.py__*__MODULE__*__FUNCTION-process_func_def"
                        },
                        {
                            "name": "process_parameters",
                            "as_name": null,
                            "local_block_id": ".:python_parser:visitors:node_processing:function_def_functions.py__*__MODULE__*__FUNCTION-process_parameters"
                        }
                    ],
                    "imported_from": "visitors.node_processing.function_def_functions",
                    "import_module_type": "LOCAL",
                    "local_module_id": ".:python_parser:visitors:node_processing:function_def_functions.py__*__MODULE"
                },
                {
                    "import_names": [
                        {
                            "name": "process_func_def",
                            "as_name": null,
                            "local_block_id": ".:python_parser:visitors:node_processing:function_def_functions.py__*__MODULE__*__FUNCTION-process_func_def"
                        },
                        {
                            "name": "process_parameters",
                            "as_name": null,
                            "local_block_id": ".:python_parser:visitors:node_processing:function_def_functions.py__*__MODULE__*__FUNCTION-process_parameters"
                        }
                    ],
                    "imported_from": "visitors.node_processing.function_def_functions",
                    "import_module_type": "LOCAL",
                    "local_module_id": ".:python_parser:visitors:node_processing:function_def_functions.py__*__MODULE"
                },
                {
                    "import_names": [
                        {
                            "name": "extract_content_from_empty_lines",
                            "as_name": null,
                            "local_block_id": ".:python_parser:visitors:node_processing:module_functions.py__*__MODULE__*__FUNCTION-extract_content_from_empty_lines"
                        },
                        {
                            "name": "process_import",
                            "as_name": null,
                            "local_block_id": ".:python_parser:visitors:node_processing:module_functions.py__*__MODULE__*__FUNCTION-process_import"
                        },
                        {
                            "name": "process_import_from",
                            "as_name": null,
                            "local_block_id": ".:python_parser:visitors:node_processing:module_functions.py__*__MODULE__*__FUNCTION-process_import_from"
                        }
                    ],
                    "imported_from": "visitors.node_processing.module_functions",
                    "import_module_type": "LOCAL",
                    "local_module_id": ".:python_parser:visitors:node_processing:module_functions.py__*__MODULE"
                },
                {
                    "import_names": [
                        {
                            "name": "extract_content_from_empty_lines",
                            "as_name": null,
                            "local_block_id": ".:python_parser:visitors:node_processing:module_functions.py__*__MODULE__*__FUNCTION-extract_content_from_empty_lines"
                        },
                        {
                            "name": "process_import",
                            "as_name": null,
                            "local_block_id": ".:python_parser:visitors:node_processing:module_functions.py__*__MODULE__*__FUNCTION-process_import"
                        },
                        {
                            "name": "process_import_from",
                            "as_name": null,
                            "local_block_id": ".:python_parser:visitors:node_processing:module_functions.py__*__MODULE__*__FUNCTION-process_import_from"
                        }
                    ],
                    "imported_from": "visitors.node_processing.module_functions",
                    "import_module_type": "LOCAL",
                    "local_module_id": ".:python_parser:visitors:node_processing:module_functions.py__*__MODULE"
                },
                {
                    "import_names": [
                        {
                            "name": "extract_content_from_empty_lines",
                            "as_name": null,
                            "local_block_id": ".:python_parser:visitors:node_processing:module_functions.py__*__MODULE__*__FUNCTION-extract_content_from_empty_lines"
                        },
                        {
                            "name": "process_import",
                            "as_name": null,
                            "local_block_id": ".:python_parser:visitors:node_processing:module_functions.py__*__MODULE__*__FUNCTION-process_import"
                        },
                        {
                            "name": "process_import_from",
                            "as_name": null,
                            "local_block_id": ".:python_parser:visitors:node_processing:module_functions.py__*__MODULE__*__FUNCTION-process_import_from"
                        }
                    ],
                    "imported_from": "visitors.node_processing.module_functions",
                    "import_module_type": "LOCAL",
                    "local_module_id": ".:python_parser:visitors:node_processing:module_functions.py__*__MODULE"
                },
                {
                    "import_names": [
                        {
                            "name": "gather_standalone_lines",
                            "as_name": null,
                            "local_block_id": ".:python_parser:visitors:node_processing:standalone_code_block_functions.py__*__MODULE__*__FUNCTION-gather_standalone_lines"
                        },
                        {
                            "name": "process_standalone_blocks",
                            "as_name": null,
                            "local_block_id": ".:python_parser:visitors:node_processing:standalone_code_block_functions.py__*__MODULE__*__FUNCTION-process_standalone_blocks"
                        }
                    ],
                    "imported_from": "visitors.node_processing.standalone_code_block_functions",
                    "import_module_type": "LOCAL",
                    "local_module_id": ".:python_parser:visitors:node_processing:standalone_code_block_functions.py__*__MODULE"
                },
                {
                    "import_names": [
                        {
                            "name": "gather_standalone_lines",
                            "as_name": null,
                            "local_block_id": ".:python_parser:visitors:node_processing:standalone_code_block_functions.py__*__MODULE__*__FUNCTION-gather_standalone_lines"
                        },
                        {
                            "name": "process_standalone_blocks",
                            "as_name": null,
                            "local_block_id": ".:python_parser:visitors:node_processing:standalone_code_block_functions.py__*__MODULE__*__FUNCTION-process_standalone_blocks"
                        }
                    ],
                    "imported_from": "visitors.node_processing.standalone_code_block_functions",
                    "import_module_type": "LOCAL",
                    "local_module_id": ".:python_parser:visitors:node_processing:standalone_code_block_functions.py__*__MODULE"
                }
            ],
            "summary": "summary complete",
            "children": [
                {
                    "function_name": "__init__",
                    "docstring": null,
                    "decorators": null,
                    "parameters": null,
                    "returns": "None",
                    "is_method": true,
                    "is_async": false,
                    "id": ".:python_parser:visitors:module_visitor.py__*__MODULE__*__CLASS-ModuleVisitor__*__FUNCTION-__init__",
                    "parent_id": ".:python_parser:visitors:module_visitor.py__*__MODULE__*__CLASS-ModuleVisitor",
                    "block_type": "FUNCTION",
                    "start_line_num": 66,
                    "end_line_num": 71,
                    "code_content": "\ndef __init__(self, id: str, module_builder: ModuleModelBuilder) -> None:\n    super().__init__(id=id)\n    self.builder: ModuleModelBuilder = module_builder\n    self.builder_stack.append(module_builder)\n",
                    "important_comments": null,
                    "dependencies": null,
                    "summary": "summary complete",
                    "children": null
                },
                {
                    "function_name": "visit_Module",
                    "docstring": "Visits the root Module node of the CST.\n\nExtracts various components of the module such as docstring, header, footer, and code content, and\nupdates the module builder with these details.",
                    "decorators": null,
                    "parameters": null,
                    "returns": "bool | None",
                    "is_method": true,
                    "is_async": false,
                    "id": ".:python_parser:visitors:module_visitor.py__*__MODULE__*__CLASS-ModuleVisitor__*__FUNCTION-visit_Module",
                    "parent_id": ".:python_parser:visitors:module_visitor.py__*__MODULE__*__CLASS-ModuleVisitor",
                    "block_type": "FUNCTION",
                    "start_line_num": 71,
                    "end_line_num": 101,
                    "code_content": "\ndef visit_Module(self, node: libcst.Module) -> bool | None:\n    \"\"\"\n        Visits the root Module node of the CST.\n\n        Extracts various components of the module such as docstring, header, footer, and code content, and\n        updates the module builder with these details.\n        \"\"\"\n\n    docstring: str | None = node.get_docstring()\n    header: list[str] = extract_content_from_empty_lines(node.header)\n    footer: list[str] = extract_content_from_empty_lines(node.footer)\n    content: str = node.code if node.code else \"\"\n    position_data: PositionData = self.get_node_position_data(node)\n    (\n        self.builder.set_docstring(docstring)\n        .set_header_content(header)\n        .set_footer_content(footer)\n        .set_code_content(content)\n        .set_start_line_num(position_data.start)\n        .set_end_line_num(position_data.end)\n    )\n    standalone_blocks: list[NodeAndPositionData] = gather_standalone_lines(\n        node.body, self\n    )\n    standalone_block_models = process_standalone_blocks(\n        code_blocks=standalone_blocks, parent_id=self.id\n    )\n    for standalone_block_model in standalone_block_models:\n        self.builder.add_child(standalone_block_model)\n",
                    "important_comments": null,
                    "dependencies": null,
                    "summary": "summary complete",
                    "children": null
                },
                {
                    "function_name": "visit_Import",
                    "docstring": "Visits an Import node in the CST.\n\nProcesses the import statement and updates the module builder with the import model.",
                    "decorators": null,
                    "parameters": null,
                    "returns": "None",
                    "is_method": true,
                    "is_async": false,
                    "id": ".:python_parser:visitors:module_visitor.py__*__MODULE__*__CLASS-ModuleVisitor__*__FUNCTION-visit_Import",
                    "parent_id": ".:python_parser:visitors:module_visitor.py__*__MODULE__*__CLASS-ModuleVisitor",
                    "block_type": "FUNCTION",
                    "start_line_num": 101,
                    "end_line_num": 111,
                    "code_content": "\ndef visit_Import(self, node: libcst.Import) -> None:\n    \"\"\"\n        Visits an Import node in the CST.\n\n        Processes the import statement and updates the module builder with the import model.\n        \"\"\"\n\n    import_model: ImportModel = process_import(node)\n    self.builder.add_import(import_model)\n",
                    "important_comments": null,
                    "dependencies": null,
                    "summary": "summary complete",
                    "children": null
                },
                {
                    "function_name": "visit_ImportFrom",
                    "docstring": "Visits an ImportFrom node in the CST.\n\nProcesses the 'from ... import ...' statement and updates the module builder with the import model.",
                    "decorators": null,
                    "parameters": null,
                    "returns": "None",
                    "is_method": true,
                    "is_async": false,
                    "id": ".:python_parser:visitors:module_visitor.py__*__MODULE__*__CLASS-ModuleVisitor__*__FUNCTION-visit_ImportFrom",
                    "parent_id": ".:python_parser:visitors:module_visitor.py__*__MODULE__*__CLASS-ModuleVisitor",
                    "block_type": "FUNCTION",
                    "start_line_num": 111,
                    "end_line_num": 121,
                    "code_content": "\ndef visit_ImportFrom(self, node: libcst.ImportFrom) -> None:\n    \"\"\"\n        Visits an ImportFrom node in the CST.\n\n        Processes the 'from ... import ...' statement and updates the module builder with the import model.\n        \"\"\"\n\n    import_model: ImportModel = process_import_from(node)\n    self.builder.add_import(import_model)\n",
                    "important_comments": null,
                    "dependencies": null,
                    "summary": "summary complete",
                    "children": null
                },
                {
                    "function_name": "visit_ClassDef",
                    "docstring": "Visits a ClassDef node in the CST.\n\nInitiates the process of building a class model from the class definition.",
                    "decorators": null,
                    "parameters": null,
                    "returns": "None",
                    "is_method": true,
                    "is_async": false,
                    "id": ".:python_parser:visitors:module_visitor.py__*__MODULE__*__CLASS-ModuleVisitor__*__FUNCTION-visit_ClassDef",
                    "parent_id": ".:python_parser:visitors:module_visitor.py__*__MODULE__*__CLASS-ModuleVisitor",
                    "block_type": "FUNCTION",
                    "start_line_num": 121,
                    "end_line_num": 147,
                    "code_content": "\ndef visit_ClassDef(self, node: libcst.ClassDef) -> None:\n    \"\"\"\n        Visits a ClassDef node in the CST.\n\n        Initiates the process of building a class model from the class definition.\n        \"\"\"\n\n    parent_id: str = self.builder_stack[-1].id\n    class_id: str = ClassIDGenerationStrategy.generate_id(\n        parent_id=parent_id, class_name=node.name.value\n    )\n\n    class_builder: ClassModelBuilder = BuilderFactory.create_builder_instance(\n        block_type=BlockType.CLASS,\n        id=class_id,\n        name=node.name.value,\n        parent_id=parent_id,\n    )\n\n    builder: ClassModelBuilder = self.builder_stack[-1]  # type: ignore\n    builder.add_child(class_builder)\n    self.builder_stack.append(class_builder)\n\n    position_data: PositionData = self.get_node_position_data(node)\n    process_class_def(node, position_data, class_builder)\n",
                    "important_comments": null,
                    "dependencies": null,
                    "summary": "summary complete",
                    "children": null
                },
                {
                    "function_name": "leave_ClassDef",
                    "docstring": "Leaves a ClassDef node in the CST.\n\nFinalizes the class model building process by popping the current builder from the stack.",
                    "decorators": null,
                    "parameters": null,
                    "returns": "None",
                    "is_method": true,
                    "is_async": false,
                    "id": ".:python_parser:visitors:module_visitor.py__*__MODULE__*__CLASS-ModuleVisitor__*__FUNCTION-leave_ClassDef",
                    "parent_id": ".:python_parser:visitors:module_visitor.py__*__MODULE__*__CLASS-ModuleVisitor",
                    "block_type": "FUNCTION",
                    "start_line_num": 147,
                    "end_line_num": 156,
                    "code_content": "\ndef leave_ClassDef(self, original_node: libcst.ClassDef) -> None:\n    \"\"\"\n        Leaves a ClassDef node in the CST.\n\n        Finalizes the class model building process by popping the current builder from the stack.\n        \"\"\"\n\n    self.builder_stack.pop()\n",
                    "important_comments": null,
                    "dependencies": null,
                    "summary": "summary complete",
                    "children": null
                },
                {
                    "function_name": "visit_FunctionDef",
                    "docstring": "Visits a FunctionDef node in the CST.\n\nInitiates the process of building a function model from the function definition.",
                    "decorators": null,
                    "parameters": null,
                    "returns": "None",
                    "is_method": true,
                    "is_async": false,
                    "id": ".:python_parser:visitors:module_visitor.py__*__MODULE__*__CLASS-ModuleVisitor__*__FUNCTION-visit_FunctionDef",
                    "parent_id": ".:python_parser:visitors:module_visitor.py__*__MODULE__*__CLASS-ModuleVisitor",
                    "block_type": "FUNCTION",
                    "start_line_num": 156,
                    "end_line_num": 181,
                    "code_content": "\ndef visit_FunctionDef(self, node: libcst.FunctionDef) -> None:\n    \"\"\"\n        Visits a FunctionDef node in the CST.\n\n        Initiates the process of building a function model from the function definition.\n        \"\"\"\n\n    parent_id: str = self.builder_stack[-1].id\n    func_id: str = FunctionIDGenerationStrategy.generate_id(\n        parent_id=parent_id, function_name=node.name.value\n    )\n\n    func_builder: FunctionModelBuilder = BuilderFactory.create_builder_instance(\n        block_type=BlockType.FUNCTION,\n        id=func_id,\n        name=node.name.value,\n        parent_id=parent_id,\n    )\n    builder: FunctionModelBuilder = self.builder_stack[-1]  # type: ignore\n    builder.add_child(func_builder)\n    self.builder_stack.append(func_builder)\n\n    position_data: PositionData = self.get_node_position_data(node)\n    process_func_def(func_id, node, position_data, func_builder)\n",
                    "important_comments": null,
                    "dependencies": null,
                    "summary": "summary complete",
                    "children": null
                },
                {
                    "function_name": "visit_Parameters",
                    "docstring": "Visits a Parameters node in the CST.\n\nProcesses the parameters of a function and updates the current function model builder with these parameters.",
                    "decorators": null,
                    "parameters": null,
                    "returns": "None",
                    "is_method": true,
                    "is_async": false,
                    "id": ".:python_parser:visitors:module_visitor.py__*__MODULE__*__CLASS-ModuleVisitor__*__FUNCTION-visit_Parameters",
                    "parent_id": ".:python_parser:visitors:module_visitor.py__*__MODULE__*__CLASS-ModuleVisitor",
                    "block_type": "FUNCTION",
                    "start_line_num": 181,
                    "end_line_num": 194,
                    "code_content": "\ndef visit_Parameters(self, node: libcst.Parameters) -> None:\n    \"\"\"\n        Visits a Parameters node in the CST.\n\n        Processes the parameters of a function and updates the current function model builder with these parameters.\n        \"\"\"\n\n    builder = self.builder_stack[-1]\n    parameter_list: ParameterListModel | None = process_parameters(node)\n\n    if isinstance(builder, FunctionModelBuilder):\n        builder.set_parameters_list(parameter_list)  # type: ignore\n",
                    "important_comments": null,
                    "dependencies": null,
                    "summary": "summary complete",
                    "children": null
                },
                {
                    "function_name": "leave_FunctionDef",
                    "docstring": "Leaves a FunctionDef node in the CST.\n\nFinalizes the function model building process by popping the current builder from the stack.",
                    "decorators": null,
                    "parameters": null,
                    "returns": "None",
                    "is_method": true,
                    "is_async": false,
                    "id": ".:python_parser:visitors:module_visitor.py__*__MODULE__*__CLASS-ModuleVisitor__*__FUNCTION-leave_FunctionDef",
                    "parent_id": ".:python_parser:visitors:module_visitor.py__*__MODULE__*__CLASS-ModuleVisitor",
                    "block_type": "FUNCTION",
                    "start_line_num": 194,
                    "end_line_num": 203,
                    "code_content": "\ndef leave_FunctionDef(self, original_node: libcst.FunctionDef) -> None:\n    \"\"\"\n        Leaves a FunctionDef node in the CST.\n\n        Finalizes the function model building process by popping the current builder from the stack.\n        \"\"\"\n\n    self.builder_stack.pop()\n",
                    "important_comments": null,
                    "dependencies": null,
                    "summary": "summary complete",
                    "children": null
                },
                {
                    "function_name": "leave_Module",
                    "docstring": "Leaves the root Module node in the CST.\n\nFinalizes the module model building process by setting dependencies for children of the module.",
                    "decorators": null,
                    "parameters": null,
                    "returns": "None",
                    "is_method": true,
                    "is_async": false,
                    "id": ".:python_parser:visitors:module_visitor.py__*__MODULE__*__CLASS-ModuleVisitor__*__FUNCTION-leave_Module",
                    "parent_id": ".:python_parser:visitors:module_visitor.py__*__MODULE__*__CLASS-ModuleVisitor",
                    "block_type": "FUNCTION",
                    "start_line_num": 203,
                    "end_line_num": 212,
                    "code_content": "\ndef leave_Module(self, original_node: libcst.Module) -> None:\n    \"\"\"\n        Leaves the root Module node in the CST.\n\n        Finalizes the module model building process by setting dependencies for children of the module.\n        \"\"\"\n\n    gather_and_set_children_dependencies(self.builder)\n",
                    "important_comments": null,
                    "dependencies": null,
                    "summary": "summary complete",
                    "children": null
                }
            ]
        }
    ]
}