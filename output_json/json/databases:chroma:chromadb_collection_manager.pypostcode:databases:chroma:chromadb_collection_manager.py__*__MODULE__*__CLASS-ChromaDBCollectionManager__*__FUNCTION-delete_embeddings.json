{
    "function_name": "delete_embeddings",
    "docstring": "Deletes embeddings from the collection based on the provided ids.\n\nArgs:\n    - ids (list[str]): List of ids corresponding to the embeddings to be deleted.\n\nExamples:\n    ```Python\n    # Delete specific embeddings by ids\n    ids_to_delete = ['id1', 'id2']\n    collection_manager.delete_embeddings(ids_to_delete)\n    ```",
    "decorators": null,
    "parameters": null,
    "returns": "None",
    "is_method": true,
    "is_async": false,
    "id": "postcode:databases:chroma:chromadb_collection_manager.py__*__MODULE__*__CLASS-ChromaDBCollectionManager__*__FUNCTION-delete_embeddings",
    "file_path": "postcode/databases/chroma/chromadb_collection_manager.py",
    "parent_id": "postcode:databases:chroma:chromadb_collection_manager.py__*__MODULE__*__CLASS-ChromaDBCollectionManager",
    "block_type": "FUNCTION",
    "start_line_num": 425,
    "end_line_num": 457,
    "code_content": "\ndef delete_embeddings(self, ids: list[str]) -> None:\n    \"\"\"\n        Deletes embeddings from the collection based on the provided ids.\n\n        Args:\n            - ids (list[str]): List of ids corresponding to the embeddings to be deleted.\n\n        Examples:\n            ```Python\n            # Delete specific embeddings by ids\n            ids_to_delete = ['id1', 'id2']\n            collection_manager.delete_embeddings(ids_to_delete)\n            ```\n        \"\"\"\n\n    ids_to_delete: list[str] = ids.copy()\n    for index, id in enumerate(ids_to_delete):\n        if not self.collection.get(id):\n            logging.error(\n                f\"Id {id} does not exist in collection {self.collection.name}.\"\n            )\n            ids_to_delete.pop(index)\n\n    if not ids_to_delete:\n        logging.warning(\"No IDs given were in the database.\")\n        return None\n\n    logging.info(\n        f\"Deleting embeddings from collection {self.collection.name} with ids {ids_to_delete}.\"\n    )\n    self.collection.delete(ids_to_delete)\n",
    "important_comments": null,
    "dependencies": null,
    "summary": null,
    "children_ids": []
}