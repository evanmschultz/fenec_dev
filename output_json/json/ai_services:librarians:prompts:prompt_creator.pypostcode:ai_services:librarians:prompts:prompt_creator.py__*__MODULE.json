{
    "docstring": null,
    "header": [],
    "footer": [],
    "imports": [
        {
            "import_names": [
                {
                    "name": "postcode.ai_services.librarians.prompts.chroma_librarian_prompts",
                    "as_name": "prompts",
                    "local_block_id": null
                }
            ],
            "imported_from": null,
            "import_module_type": "LOCAL",
            "local_module_id": "postcode:ai_services:librarians:prompts:chroma_librarian_prompts.py__*__MODULE"
        }
    ],
    "id": "postcode:ai_services:librarians:prompts:prompt_creator.py__*__MODULE",
    "file_path": "postcode/ai_services/librarians/prompts/prompt_creator.py",
    "parent_id": "postcode:ai_services:librarians:prompts__*__DIRECTORY",
    "block_type": "MODULE",
    "start_line_num": 1,
    "end_line_num": 44,
    "code_content": "import postcode.ai_services.librarians.prompts.chroma_librarian_prompts as prompts\n\n\nclass ChromaLibrarianPromptCreator:\n    \"\"\"\n    Class for creating prompts for the Chroma Librarian.\n\n    Methods:\n        - `create_prompt`: Static method that creates a prompt for the Chroma Librarian.\n\n    Examples:\n        ```Python\n        # Create a prompt\n        prompt: str | None = ChromaLibrarianPromptCreator.create_prompt(\n            user_question,\n            prompt_template,\n            queries_count,\n        )\n        ```\n    \"\"\"\n\n    @staticmethod\n    def create_prompt(\n        user_question: str,\n        prompt_template: str = prompts.DEFAULT_CHROMA_LIBRARIAN_PROMPT,\n        queries_count: int = 3,\n    ) -> str:\n        \"\"\"\n        Creates a prompt for the Chroma Librarian by interpolating the given prompt template with the given user question and queries count.\n\n        Args:\n            - user_question (str): The user's question.\n            - prompt_template (str): The template to interpolate.\n                - default: DEFAULT_CHROMA_LIBRARIAN_PROMPT defined in `chroma_librarian_prompts.py`.\n            - queries_count (int): The number of queries to make.\n                - default: 3\n        \"\"\"\n\n        return prompt_template.format(\n            user_question=user_question,\n            prompt_template=prompt_template,\n            queries_count=queries_count,\n        )\n",
    "important_comments": null,
    "dependencies": null,
    "summary": "\nSummary:\n\n        postcode:ai_services:librarians:prompts:prompt_creator.py__*__MODULE\n\n        \nChild (postcode:ai_services:librarians:prompts:prompt_creator.py__*__MODULE__*__CLASS-ChromaLibrarianPromptCreator) code content:\n\n\nclass ChromaLibrarianPromptCreator:\n    \"\"\"\n    Class for creating prompts for the Chroma Librarian.\n\n    Methods:\n        - `create_prompt`: Static method that creates a prompt for the Chroma Librarian.\n\n    Examples:\n        ```Python\n        # Create a prompt\n        prompt: str | None = ChromaLibrarianPromptCreator.create_prompt(\n            user_question,\n            prompt_template,\n            queries_count,\n        )\n        ```\n    \"\"\"\n\n    @staticmethod\n    def create_prompt(\n        user_question: str,\n        prompt_template: str = prompts.DEFAULT_CHROMA_LIBRARIAN_PROMPT,\n        queries_count: int = 3,\n    ) -> str:\n        \"\"\"\n        Creates a prompt for the Chroma Librarian by interpolating the given prompt template with the given user question and queries count.\n\n        Args:\n            - user_question (str): The user's question.\n            - prompt_template (str): The template to interpolate.\n                - default: DEFAULT_CHROMA_LIBRARIAN_PROMPT defined in `chroma_librarian_prompts.py`.\n            - queries_count (int): The number of queries to make.\n                - default: 3\n        \"\"\"\n\n        return prompt_template.format(\n            user_question=user_question,\n            prompt_template=prompt_template,\n            queries_count=queries_count,\n        )\n\n, None, None\n        ",
    "children_ids": [
        "postcode:ai_services:librarians:prompts:prompt_creator.py__*__MODULE__*__CLASS-ChromaLibrarianPromptCreator"
    ]
}