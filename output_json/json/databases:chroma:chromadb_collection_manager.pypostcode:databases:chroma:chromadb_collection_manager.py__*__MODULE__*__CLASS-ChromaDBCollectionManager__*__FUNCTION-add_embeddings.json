{
    "function_name": "add_embeddings",
    "docstring": "Adds embeddings to the collection.\n\nArgs:\n    - ids (list[str]): A list of ids to add to the collection.\n    - documents (list[str]): A list of documents to add to the collection.\n    - metadatas (list[dict[str, Any]]): A list of metadatas to add to the collection.\n\nRaises:\n    - ValueError - If you don't provide either embeddings or documents.\n    - ValueError: If the length of ids, embeddings, metadatas, or documents don't match.\n    - ValueError - If you provide an id that already exists.\n\nExamples:\n    ```Python\n    # define the ids, metadatas, and documents to add to the collection\n    id: list[str] = [\"my_id\", \"my_id2\"]\n    metadatas: list[dict[str, Any]] = [\n        {\"my_metadata\": \"my_metadata_value\"},\n        {\"my_metadata2\": \"my_metadata_value2\"},\n    ]\n    documents: list[str] = [\"my_document\", \"my_document2\"]\n\n    # add the embeddings to the collection\n    collection_manager.add_embeddings(id, metadatas, documents)\n    ```",
    "decorators": null,
    "parameters": null,
    "returns": "None",
    "is_method": true,
    "is_async": false,
    "id": "postcode:databases:chroma:chromadb_collection_manager.py__*__MODULE__*__CLASS-ChromaDBCollectionManager__*__FUNCTION-add_embeddings",
    "file_path": "postcode/databases/chroma/chromadb_collection_manager.py",
    "parent_id": "postcode:databases:chroma:chromadb_collection_manager.py__*__MODULE__*__CLASS-ChromaDBCollectionManager",
    "block_type": "FUNCTION",
    "start_line_num": 94,
    "end_line_num": 137,
    "code_content": "\ndef add_embeddings(\n    self,\n    ids: list[str],\n    documents: list[str],\n    metadatas: list[Mapping[str, str | int | float | bool]],\n) -> None:\n    \"\"\"\n        Adds embeddings to the collection.\n\n        Args:\n            - ids (list[str]): A list of ids to add to the collection.\n            - documents (list[str]): A list of documents to add to the collection.\n            - metadatas (list[dict[str, Any]]): A list of metadatas to add to the collection.\n\n        Raises:\n            - ValueError - If you don't provide either embeddings or documents.\n            - ValueError: If the length of ids, embeddings, metadatas, or documents don't match.\n            - ValueError - If you provide an id that already exists.\n\n        Examples:\n            ```Python\n            # define the ids, metadatas, and documents to add to the collection\n            id: list[str] = [\"my_id\", \"my_id2\"]\n            metadatas: list[dict[str, Any]] = [\n                {\"my_metadata\": \"my_metadata_value\"},\n                {\"my_metadata2\": \"my_metadata_value2\"},\n            ]\n            documents: list[str] = [\"my_document\", \"my_document2\"]\n\n            # add the embeddings to the collection\n            collection_manager.add_embeddings(id, metadatas, documents)\n            ```\n        \"\"\"\n\n    if not len(ids) == len(documents) == len(metadatas):\n        raise ValueError(\"The length of ids, documents, and metadatas must match.\")\n\n    try:\n        logging.info(f\"Adding embeddings to collection {self.collection.name}\")\n        self.collection.add(ids, documents=documents, metadatas=metadatas)\n    except Exception as exception:\n        raise exception\n",
    "important_comments": null,
    "dependencies": null,
    "summary": "\nSummary:\n\n        postcode:databases:chroma:chromadb_collection_manager.py__*__MODULE__*__CLASS-ChromaDBCollectionManager__*__FUNCTION-add_embeddings\n\n        None, None, None\n        ",
    "children_ids": []
}