{
    "docstring": null,
    "header": [],
    "footer": [],
    "imports": [
        {
            "import_names": [
                {
                    "name": "Callable",
                    "as_name": null,
                    "local_block_id": null
                },
                {
                    "name": "LiteralString",
                    "as_name": null,
                    "local_block_id": null
                }
            ],
            "imported_from": "typing",
            "import_module_type": "STANDARD_LIBRARY",
            "local_module_id": null
        },
        {
            "import_names": [
                {
                    "name": "postcode.ai_services.summarizer.prompts.summarization_prompts",
                    "as_name": "prompts",
                    "local_block_id": null
                }
            ],
            "imported_from": null,
            "import_module_type": "LOCAL",
            "local_module_id": "postcode:ai_services:summarizer:prompts:summarization_prompts.py__*__MODULE"
        }
    ],
    "id": "postcode:ai_services:summarizer:prompts:prompt_creator.py__*__MODULE",
    "file_path": "postcode/ai_services/summarizer/prompts/prompt_creator.py",
    "parent_id": "postcode:ai_services:summarizer:prompts__*__DIRECTORY",
    "block_type": "MODULE",
    "start_line_num": 1,
    "end_line_num": 132,
    "code_content": "from typing import Callable, LiteralString\n\nimport postcode.ai_services.summarizer.prompts.summarization_prompts as prompts\n\n\nclass SummarizationPromptCreator:\n    \"\"\"\n    Class for creating prompts for the summarizer.\n\n    Methods:\n        - `create_prompt`: Static method that creates a prompt for the summarizer.\n\n    Examples:\n        ```Python\n        # Create a prompt\n        prompt: str | None = PromptCreator.create_prompt(\n            code,\n            children_summaries,\n            dependency_summaries,\n            import_details,\n        )\n        ```\n    \"\"\"\n\n    _interpolation_strategies: dict[str, Callable[..., str]] = {\n        \"children_dependencies_import_details\": lambda code, children_summaries, dependencies, import_details: SummarizationPromptCreator._interpolate_prompt_string(\n            prompts.COD_SUMMARIZATION_PROMPT_WITH_EVERYTHING,\n            code=code,\n            children_summaries=children_summaries,\n            dependencies=dependencies,\n            import_details=import_details,\n        ),\n        \"children_dependencies_noimport_details\": lambda code, children_summaries, dependencies, import_details: SummarizationPromptCreator._interpolate_prompt_string(\n            prompts.COD_SUMMARIZATION_PROMPT_NO_IMPORTS,\n            code=code,\n            children_summaries=children_summaries,\n            dependencies=dependencies,\n        ),\n        \"children_nodependencies_import_details\": lambda code, children_summaries, dependencies, import_details: SummarizationPromptCreator._interpolate_prompt_string(\n            prompts.COD_SUMMARIZATION_PROMPT_NO_DEPENDENCIES,\n            code=code,\n            children_summaries=children_summaries,\n            import_details=import_details,\n        ),\n        \"children_nodependencies_noimport_details\": lambda code, children_summaries, dependencies, import_details: SummarizationPromptCreator._interpolate_prompt_string(\n            prompts.COD_SUMMARIZATION_PROMPT_NO_DEPENDENCIES_NO_IMPORTS,\n            code=code,\n            children_summaries=children_summaries,\n        ),\n        \"nochildren_dependencies_import_details\": lambda code, children_summaries, dependencies, import_details: SummarizationPromptCreator._interpolate_prompt_string(\n            prompts.COD_SUMMARIZATION_PROMPT_NO_CHILDREN,\n            code=code,\n            dependencies=dependencies,\n            import_details=import_details,\n        ),\n        \"nochildren_dependencies_noimport_details\": lambda code, children_summaries, dependencies, import_details: SummarizationPromptCreator._interpolate_prompt_string(\n            prompts.COD_SUMMARIZATION_PROMPT_NO_CHILDREN_NO_IMPORTS,\n            code=code,\n            dependencies=dependencies,\n        ),\n        \"nochildren_nodependencies_import_details\": lambda code, children_summaries, dependencies, import_details: SummarizationPromptCreator._interpolate_prompt_string(\n            prompts.COD_SUMMARIZATION_PROMPT_NO_DEPENDENCIES_NO_CHILDREN,\n            code=code,\n            import_details=import_details,\n        ),\n        \"nochildren_nodependencies_noimport_details\": lambda code, children_summaries, dependencies, import_details: SummarizationPromptCreator._interpolate_prompt_string(\n            prompts.COD_SUMMARIZATION_PROMPT_WITHOUT_ANYTHING,\n            code=code,\n        ),\n    }\n\n    @staticmethod\n    def _interpolate_prompt_string(prompt_template: str, **kwargs) -> str:\n        \"\"\"Returns a prompt string with the provided values interpolated into the template.\"\"\"\n\n        prompt_string: str = prompt_template\n        for key, value in kwargs.items():\n            if value:\n                prompt_string = prompt_string.replace(f\"{{{key}}}\", value)\n\n        return prompt_string\n\n    @staticmethod\n    def create_prompt(\n        code: str,\n        children_summaries: str | None = None,\n        dependency_summaries: str | None = None,\n        import_details: str | None = None,\n    ) -> str | None:\n        \"\"\"\n        Dynamically creates a prompt for the summarizer based on the provided arguments.\n\n        Args:\n            - code (str): The code snippet to summarize.\n            - children_summaries (str, optional): The summaries of the children of the code snippet.\n            - dependency_summaries (str, optional): The summaries of the dependencies of the code snippet.\n            - import_details (str, optional): The import details of the code snippet.\n\n        Returns:\n            - str: The prompt for the summarizer.\n\n        Examples:\n            ```Python\n            # Create a prompt\n            prompt: str | None = PromptCreator.create_prompt(\n                code,\n                children_summaries,\n                dependency_summaries,\n                import_details,\n            )\n            ```\n        \"\"\"\n\n        strategy_key: LiteralString = \"_\".join(\n            [\n                \"children\" if children_summaries else \"nochildren\",\n                \"dependencies\" if dependency_summaries else \"nodependencies\",\n                \"import_details\" if import_details else \"noimport_details\",\n            ]\n        )\n        strategy: Callable[\n            ..., str\n        ] | None = SummarizationPromptCreator._interpolation_strategies.get(\n            strategy_key\n        )\n        if strategy:\n            return strategy(\n                code, children_summaries, dependency_summaries, import_details\n            )\n        else:\n            raise ValueError(f\"Could not find strategy for {strategy_key}\")\n",
    "important_comments": null,
    "dependencies": null,
    "summary": "\nSummary:\n\n        postcode:ai_services:summarizer:prompts:prompt_creator.py__*__MODULE\n\n        \nChild (postcode:ai_services:summarizer:prompts:prompt_creator.py__*__MODULE__*__CLASS-SummarizationPromptCreator) code content:\n\n\nclass SummarizationPromptCreator:\n    \"\"\"\n    Class for creating prompts for the summarizer.\n\n    Methods:\n        - `create_prompt`: Static method that creates a prompt for the summarizer.\n\n    Examples:\n        ```Python\n        # Create a prompt\n        prompt: str | None = PromptCreator.create_prompt(\n            code,\n            children_summaries,\n            dependency_summaries,\n            import_details,\n        )\n        ```\n    \"\"\"\n\n    _interpolation_strategies: dict[str, Callable[..., str]] = {\n        \"children_dependencies_import_details\": lambda code, children_summaries, dependencies, import_details: SummarizationPromptCreator._interpolate_prompt_string(\n            prompts.COD_SUMMARIZATION_PROMPT_WITH_EVERYTHING,\n            code=code,\n            children_summaries=children_summaries,\n            dependencies=dependencies,\n            import_details=import_details,\n        ),\n        \"children_dependencies_noimport_details\": lambda code, children_summaries, dependencies, import_details: SummarizationPromptCreator._interpolate_prompt_string(\n            prompts.COD_SUMMARIZATION_PROMPT_NO_IMPORTS,\n            code=code,\n            children_summaries=children_summaries,\n            dependencies=dependencies,\n        ),\n        \"children_nodependencies_import_details\": lambda code, children_summaries, dependencies, import_details: SummarizationPromptCreator._interpolate_prompt_string(\n            prompts.COD_SUMMARIZATION_PROMPT_NO_DEPENDENCIES,\n            code=code,\n            children_summaries=children_summaries,\n            import_details=import_details,\n        ),\n        \"children_nodependencies_noimport_details\": lambda code, children_summaries, dependencies, import_details: SummarizationPromptCreator._interpolate_prompt_string(\n            prompts.COD_SUMMARIZATION_PROMPT_NO_DEPENDENCIES_NO_IMPORTS,\n            code=code,\n            children_summaries=children_summaries,\n        ),\n        \"nochildren_dependencies_import_details\": lambda code, children_summaries, dependencies, import_details: SummarizationPromptCreator._interpolate_prompt_string(\n            prompts.COD_SUMMARIZATION_PROMPT_NO_CHILDREN,\n            code=code,\n            dependencies=dependencies,\n            import_details=import_details,\n        ),\n        \"nochildren_dependencies_noimport_details\": lambda code, children_summaries, dependencies, import_details: SummarizationPromptCreator._interpolate_prompt_string(\n            prompts.COD_SUMMARIZATION_PROMPT_NO_CHILDREN_NO_IMPORTS,\n            code=code,\n            dependencies=dependencies,\n        ),\n        \"nochildren_nodependencies_import_details\": lambda code, children_summaries, dependencies, import_details: SummarizationPromptCreator._interpolate_prompt_string(\n            prompts.COD_SUMMARIZATION_PROMPT_NO_DEPENDENCIES_NO_CHILDREN,\n            code=code,\n            import_details=import_details,\n        ),\n        \"nochildren_nodependencies_noimport_details\": lambda code, children_summaries, dependencies, import_details: SummarizationPromptCreator._interpolate_prompt_string(\n            prompts.COD_SUMMARIZATION_PROMPT_WITHOUT_ANYTHING,\n            code=code,\n        ),\n    }\n\n    @staticmethod\n    def _interpolate_prompt_string(prompt_template: str, **kwargs) -> str:\n        \"\"\"Returns a prompt string with the provided values interpolated into the template.\"\"\"\n\n        prompt_string: str = prompt_template\n        for key, value in kwargs.items():\n            if value:\n                prompt_string = prompt_string.replace(f\"{{{key}}}\", value)\n\n        return prompt_string\n\n    @staticmethod\n    def create_prompt(\n        code: str,\n        children_summaries: str | None = None,\n        dependency_summaries: str | None = None,\n        import_details: str | None = None,\n    ) -> str | None:\n        \"\"\"\n        Dynamically creates a prompt for the summarizer based on the provided arguments.\n\n        Args:\n            - code (str): The code snippet to summarize.\n            - children_summaries (str, optional): The summaries of the children of the code snippet.\n            - dependency_summaries (str, optional): The summaries of the dependencies of the code snippet.\n            - import_details (str, optional): The import details of the code snippet.\n\n        Returns:\n            - str: The prompt for the summarizer.\n\n        Examples:\n            ```Python\n            # Create a prompt\n            prompt: str | None = PromptCreator.create_prompt(\n                code,\n                children_summaries,\n                dependency_summaries,\n                import_details,\n            )\n            ```\n        \"\"\"\n\n        strategy_key: LiteralString = \"_\".join(\n            [\n                \"children\" if children_summaries else \"nochildren\",\n                \"dependencies\" if dependency_summaries else \"nodependencies\",\n                \"import_details\" if import_details else \"noimport_details\",\n            ]\n        )\n        strategy: Callable[\n            ..., str\n        ] | None = SummarizationPromptCreator._interpolation_strategies.get(\n            strategy_key\n        )\n        if strategy:\n            return strategy(\n                code, children_summaries, dependency_summaries, import_details\n            )\n        else:\n            raise ValueError(f\"Could not find strategy for {strategy_key}\")\n\n, None, None\n        ",
    "children_ids": [
        "postcode:ai_services:summarizer:prompts:prompt_creator.py__*__MODULE__*__CLASS-SummarizationPromptCreator"
    ]
}