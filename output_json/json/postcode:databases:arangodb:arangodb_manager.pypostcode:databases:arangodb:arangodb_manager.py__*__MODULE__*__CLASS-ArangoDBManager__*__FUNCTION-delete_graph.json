{
    "function_name": "delete_graph",
    "docstring": "Deletes a graph by its name.\n\nArgs:\n    - graph_name (str, optional): The name of the graph. Defaults to None.",
    "decorators": null,
    "parameters": null,
    "returns": "None",
    "is_method": true,
    "is_async": false,
    "id": "postcode:databases:arangodb:arangodb_manager.py__*__MODULE__*__CLASS-ArangoDBManager__*__FUNCTION-delete_graph",
    "file_path": "postcode/databases/arangodb/arangodb_manager.py",
    "parent_id": "postcode:databases:arangodb:arangodb_manager.py__*__MODULE__*__CLASS-ArangoDBManager",
    "block_type": "FUNCTION",
    "start_line_num": 390,
    "end_line_num": 406,
    "code_content": "\ndef delete_graph(self, graph_name: str | None = None) -> None:\n    \"\"\"\n        Deletes a graph by its name.\n\n        Args:\n            - graph_name (str, optional): The name of the graph. Defaults to None.\n        \"\"\"\n\n    if not graph_name:\n        graph_name = self.default_graph_name\n    try:\n        self.db_connector.db.delete_graph(graph_name)\n        logging.info(f\"Graph '{graph_name}' deleted successfully.\")\n    except Exception as e:\n        logging.error(f\"Error deleting graph '{graph_name}': {e}\")\n",
    "important_comments": null,
    "dependencies": null,
    "summary": "\nThe `delete_graph` method in a class deletes a named graph from a database, falling back to a default name if none is specified, handles exceptions, and logs the outcome.",
    "children_ids": []
}