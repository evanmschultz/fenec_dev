{
    "class_name": "StandaloneCodeBlockModel",
    "decorators": null,
    "bases": [
        "BaseCodeBlockModel",
        "StandaloneCodeBlockSpecificAttributes"
    ],
    "docstring": "Model for a standalone code block.",
    "keywords": null,
    "id": "postcode:models:models.py__*__MODULE__*__CLASS-StandaloneCodeBlockModel",
    "file_path": "postcode/models/models.py",
    "parent_id": "postcode:models:models.py__*__MODULE",
    "block_type": "CLASS",
    "start_line_num": 357,
    "end_line_num": 371,
    "code_content": "\n\nclass StandaloneCodeBlockModel(\n    BaseCodeBlockModel, StandaloneCodeBlockSpecificAttributes\n):\n    \"\"\"Model for a standalone code block.\"\"\"\n\n    def convert_to_metadata(self) -> dict[str, str | int]:\n        \"\"\"Converts the standalone code block model to a metadata dictionary.\"\"\"\n\n        return {\n            **self._convert_base_attributes_to_metadata_dict(),\n            **self._convert_standalone_block_attributes_to_metadata_dict(),\n        }\n",
    "important_comments": null,
    "dependencies": [
        {
            "code_block_id": "postcode:models:models.py__*__MODULE__*__CLASS-BaseCodeBlockModel"
        },
        {
            "code_block_id": "postcode:models:models.py__*__MODULE__*__CLASS-StandaloneCodeBlockSpecificAttributes"
        }
    ],
    "summary": "\nSummary:\n\n        postcode:models:models.py__*__MODULE__*__CLASS-StandaloneCodeBlockModel\n\n        \nChild (postcode:models:models.py__*__MODULE__*__CLASS-StandaloneCodeBlockModel__*__FUNCTION-convert_to_metadata) code content:\n\ndef convert_to_metadata(self) -> dict[str, str | int]:\n    \"\"\"Converts the standalone code block model to a metadata dictionary.\"\"\"\n\n    return {\n        **self._convert_base_attributes_to_metadata_dict(),\n        **self._convert_standalone_block_attributes_to_metadata_dict(),\n    }\n\n, None, None\n        ",
    "children_ids": [
        "postcode:models:models.py__*__MODULE__*__CLASS-StandaloneCodeBlockModel__*__FUNCTION-convert_to_metadata"
    ]
}