{
    "function_name": "_func_is_method",
    "docstring": "Returns true if an ancestor of the function is a class.",
    "decorators": null,
    "parameters": null,
    "returns": "bool",
    "is_method": false,
    "is_async": false,
    "id": "postcode:python_parser:visitors:node_processing:function_def_functions.py__*__MODULE__*__FUNCTION-_func_is_method",
    "file_path": "postcode/python_parser/visitors/node_processing/function_def_functions.py",
    "parent_id": "postcode:python_parser:visitors:node_processing:function_def_functions.py__*__MODULE",
    "block_type": "FUNCTION",
    "start_line_num": 120,
    "end_line_num": 126,
    "code_content": "\n\ndef _func_is_method(id: str) -> bool:\n    \"\"\"Returns true if an ancestor of the function is a class.\"\"\"\n\n    return str(BlockType.CLASS) in id\n",
    "important_comments": null,
    "dependencies": [
        {
            "import_names": [
                {
                    "name": "BlockType",
                    "as_name": null,
                    "local_block_id": "postcode:models:enums.py__*__MODULE__*__CLASS-BlockType"
                }
            ],
            "imported_from": "postcode.models.enums",
            "import_module_type": "LOCAL",
            "local_module_id": "postcode:models:enums.py__*__MODULE"
        }
    ],
    "summary": "\nSummary:\n\n        postcode:python_parser:visitors:node_processing:function_def_functions.py__*__MODULE__*__FUNCTION-_func_is_method\n\n        None, \nImported code block (postcode:models:enums.py__*__MODULE) code content:\n\n\nclass BlockType(str, Enum):\n    \"\"\"Enum of code block types.\"\"\"\n\n    STANDALONE_CODE_BLOCK = \"STANDALONE_BLOCK\"\n    CLASS = \"CLASS\"\n    FUNCTION = \"FUNCTION\"\n    MODULE = \"MODULE\"\n    DIRECTORY = \"DIRECTORY\"\n\n    def __str__(self) -> str:\n        return self.value\n\n, \n        ",
    "children_ids": []
}