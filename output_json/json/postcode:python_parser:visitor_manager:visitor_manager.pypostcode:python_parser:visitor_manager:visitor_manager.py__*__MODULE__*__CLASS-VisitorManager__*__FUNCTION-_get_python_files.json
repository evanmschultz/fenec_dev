{
    "function_name": "_get_python_files",
    "docstring": "Gets all Python files in the specified directory.",
    "decorators": [
        {
            "content": "@logging_decorator(message=\"Getting Python files\")",
            "decorator_name": "logging_decorator",
            "decorator_args": [
                "message=\"Getting Python files\""
            ]
        }
    ],
    "parameters": null,
    "returns": "list[str]",
    "is_method": true,
    "is_async": false,
    "id": "postcode:python_parser:visitor_manager:visitor_manager.py__*__MODULE__*__CLASS-VisitorManager__*__FUNCTION-_get_python_files",
    "file_path": "postcode/python_parser/visitor_manager/visitor_manager.py",
    "parent_id": "postcode:python_parser:visitor_manager:visitor_manager.py__*__MODULE__*__CLASS-VisitorManager",
    "block_type": "FUNCTION",
    "start_line_num": 200,
    "end_line_num": 207,
    "code_content": "\n@logging_decorator(message=\"Getting Python files\")\ndef _get_python_files(self) -> list[str]:\n    \"\"\"Gets all Python files in the specified directory.\"\"\"\n\n    all_files: list[str] = self._walk_directories()\n    return self._filter_python_files(all_files)\n",
    "important_comments": null,
    "dependencies": null,
    "summary": "\nThe class method `_get_python_files` is designed to identify and return a list of Python file paths from a directory. It leverages a `logging_decorator` for logging purposes, utilizes `_walk_directories` to traverse the directory structure, and applies `_filter_python_files` to filter the results. The method's return type is explicitly indicated as a list of strings.",
    "children_ids": []
}