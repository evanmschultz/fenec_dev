{
    "function_name": "update_all",
    "docstring": null,
    "decorators": null,
    "parameters": null,
    "returns": "ChromaSetupReturnContext",
    "is_method": true,
    "is_async": false,
    "id": "postcode:updaters:graph_db_updater.py__*__MODULE__*__CLASS-GraphDBUpdater__*__FUNCTION-update_all",
    "file_path": "postcode/updaters/graph_db_updater.py",
    "parent_id": "postcode:updaters:graph_db_updater.py__*__MODULE__*__CLASS-GraphDBUpdater",
    "block_type": "FUNCTION",
    "start_line_num": 42,
    "end_line_num": 73,
    "code_content": "\ndef update_all(\n    self,\n    directory: str,\n    output_directory: str,\n    logger: Logger,\n) -> ChromaSetupReturnContext:\n    self.arango_connector.delete_all_collections()\n    self.arango_connector.ensure_collections()\n\n    process_files_return: VisitorManagerProcessFilesReturn = (\n        self._visit_and_parse_files(directory, logger)\n    )\n    models_tuple: tuple[ModelType, ...] = process_files_return.models_tuple\n\n    self._upsert_models_to_graph_db(models_tuple)\n\n    finalized_models: list[ModelType] | None = self._map_and_summarize_models(\n        models_tuple, logger\n    )\n\n    if not finalized_models:\n        raise Exception(\"No finalized models returned from summarization.\")\n\n    json_manager = JSONHandler(\n        directory, process_files_return.directory_modules, output_directory\n    )\n    self._save_json(finalized_models, json_manager, logger)\n    self._upsert_models_to_graph_db(tuple(finalized_models))\n\n    return setup_chroma(finalized_models, logger)\n",
    "important_comments": null,
    "dependencies": null,
    "summary": "\nSummary:\n\n        postcode:updaters:graph_db_updater.py__*__MODULE__*__CLASS-GraphDBUpdater__*__FUNCTION-update_all\n\n        None, None, None\n        ",
    "children_ids": []
}