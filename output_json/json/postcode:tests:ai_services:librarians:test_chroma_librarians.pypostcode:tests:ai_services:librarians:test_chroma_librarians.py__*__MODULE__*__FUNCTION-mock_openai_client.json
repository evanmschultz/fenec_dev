{
    "function_name": "mock_openai_client",
    "docstring": null,
    "decorators": null,
    "parameters": null,
    "returns": "Generator[MagicMock, Any, None]",
    "is_method": false,
    "is_async": false,
    "id": "postcode:tests:ai_services:librarians:test_chroma_librarians.py__*__MODULE__*__FUNCTION-mock_openai_client",
    "file_path": "postcode/tests/ai_services/librarians/test_chroma_librarians.py",
    "parent_id": "postcode:tests:ai_services:librarians:test_chroma_librarians.py__*__MODULE",
    "block_type": "FUNCTION",
    "start_line_num": 14,
    "end_line_num": 20,
    "code_content": "\n\n@pytest.fixture\ndef mock_openai_client() -> Generator[MagicMock, Any, None]:\n    with patch(\"openai.OpenAI\") as mock_openai:\n        yield mock_openai()\n",
    "important_comments": null,
    "dependencies": [
        {
            "import_names": [
                {
                    "name": "Any",
                    "as_name": null,
                    "local_block_id": null
                },
                {
                    "name": "Generator",
                    "as_name": null,
                    "local_block_id": null
                }
            ],
            "imported_from": "typing",
            "import_module_type": "STANDARD_LIBRARY",
            "local_module_id": null
        },
        {
            "import_names": [
                {
                    "name": "Any",
                    "as_name": null,
                    "local_block_id": null
                },
                {
                    "name": "Generator",
                    "as_name": null,
                    "local_block_id": null
                }
            ],
            "imported_from": "typing",
            "import_module_type": "STANDARD_LIBRARY",
            "local_module_id": null
        },
        {
            "import_names": [
                {
                    "name": "pytest",
                    "as_name": null,
                    "local_block_id": null
                }
            ],
            "imported_from": null,
            "import_module_type": "LOCAL",
            "local_module_id": null
        },
        {
            "import_names": [
                {
                    "name": "patch",
                    "as_name": null,
                    "local_block_id": null
                },
                {
                    "name": "MagicMock",
                    "as_name": null,
                    "local_block_id": null
                }
            ],
            "imported_from": "unittest.mock",
            "import_module_type": "LOCAL",
            "local_module_id": null
        },
        {
            "import_names": [
                {
                    "name": "patch",
                    "as_name": null,
                    "local_block_id": null
                },
                {
                    "name": "MagicMock",
                    "as_name": null,
                    "local_block_id": null
                }
            ],
            "imported_from": "unittest.mock",
            "import_module_type": "LOCAL",
            "local_module_id": null
        }
    ],
    "summary": "\nThe Python code provides a pytest fixture `mock_openai_client` that creates a MagicMock instance of the `openai.OpenAI` class using `unittest.mock.patch` within a `with` statement, intended for use in test isolation.",
    "children_ids": []
}