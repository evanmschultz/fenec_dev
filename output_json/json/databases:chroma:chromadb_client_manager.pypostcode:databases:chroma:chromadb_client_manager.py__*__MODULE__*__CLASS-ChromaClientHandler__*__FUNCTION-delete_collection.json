{
    "function_name": "delete_collection",
    "docstring": "Deletes a ChromaDB collection with the given name.\n\nArgs:\n    - name (str): The name of the collection to delete.\n\nRaises:\n    - ValueError: If the collection does not exist.\n\nExamples:\n    ```Python\n    client_manager.delete_collection(\"my_collection\")\n    ```",
    "decorators": null,
    "parameters": null,
    "returns": "None",
    "is_method": true,
    "is_async": false,
    "id": "postcode:databases:chroma:chromadb_client_manager.py__*__MODULE__*__CLASS-ChromaClientHandler__*__FUNCTION-delete_collection",
    "file_path": "postcode/databases/chroma/chromadb_client_manager.py",
    "parent_id": "postcode:databases:chroma:chromadb_client_manager.py__*__MODULE__*__CLASS-ChromaClientHandler",
    "block_type": "FUNCTION",
    "start_line_num": 94,
    "end_line_num": 116,
    "code_content": "\ndef delete_collection(self, name: str) -> None:\n    \"\"\"\n        Deletes a ChromaDB collection with the given name.\n\n        Args:\n            - name (str): The name of the collection to delete.\n\n        Raises:\n            - ValueError: If the collection does not exist.\n\n        Examples:\n            ```Python\n            client_manager.delete_collection(\"my_collection\")\n            ```\n        \"\"\"\n\n    if self.client.get_collection(name):\n        logging.info(f\"Deleting collection {name}\")\n        self.client.delete_collection(name)\n    else:\n        raise ValueError(f\"Collection {name} does not exist.\")\n",
    "important_comments": null,
    "dependencies": null,
    "summary": "\nSummary:\n\n        postcode:databases:chroma:chromadb_client_manager.py__*__MODULE__*__CLASS-ChromaClientHandler__*__FUNCTION-delete_collection\n\n        None, None, None\n        ",
    "children_ids": []
}