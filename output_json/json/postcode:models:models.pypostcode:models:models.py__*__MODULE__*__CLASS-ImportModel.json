{
    "class_name": "ImportModel",
    "decorators": null,
    "bases": [
        "BaseModel"
    ],
    "docstring": "Class representing an import statement.",
    "keywords": null,
    "id": "postcode:models:models.py__*__MODULE__*__CLASS-ImportModel",
    "file_path": "postcode/models/models.py",
    "parent_id": "postcode:models:models.py__*__MODULE",
    "block_type": "CLASS",
    "start_line_num": 21,
    "end_line_num": 34,
    "code_content": "\n\nclass ImportModel(BaseModel):\n    \"\"\"Class representing an import statement.\"\"\"\n\n    import_names: list[ImportNameModel]\n    imported_from: str | None = None\n    import_module_type: ImportModuleType = ImportModuleType.STANDARD_LIBRARY\n    local_module_id: str | None = None\n\n    def convert_import_to_metadata(self) -> str:\n        \"\"\"Converts the import to a metadata string.\"\"\"\n        return self.model_dump_json()\n",
    "important_comments": null,
    "dependencies": [
        {
            "code_block_id": "postcode:models:models.py__*__MODULE__*__CLASS-ImportNameModel"
        },
        {
            "import_names": [
                {
                    "name": "BlockType",
                    "as_name": null,
                    "local_block_id": null
                },
                {
                    "name": "ImportModuleType",
                    "as_name": null,
                    "local_block_id": null
                },
                {
                    "name": "CommentType",
                    "as_name": null,
                    "local_block_id": null
                }
            ],
            "imported_from": "postcode.models.enums",
            "import_module_type": "LOCAL",
            "local_module_id": null
        },
        {
            "import_names": [
                {
                    "name": "BaseModel",
                    "as_name": null,
                    "local_block_id": null
                },
                {
                    "name": "Field",
                    "as_name": null,
                    "local_block_id": null
                },
                {
                    "name": "field_validator",
                    "as_name": null,
                    "local_block_id": null
                }
            ],
            "imported_from": "pydantic",
            "import_module_type": "THIRD_PARTY",
            "local_module_id": null
        }
    ],
    "summary": "\n\nThe `ImportModel` class in Python is designed to encapsulate an import statement's details. It contains attributes such as `import_names`, a list of `ImportNameModel` instances representing the names being imported, `imported_from`, an optional string indicating the source module, `import_module_type`, an enum value of `ImportModuleType` indicating the type of import (e.g., standard library), and `local_module_id`, an optional string for the local module identifier. The class features a method `convert_import_to_metadata`, which serializes the import statement's information into a JSON-formatted metadata string using the `model_dump_json` method. This class is useful for representing and manipulating import statements programmatically, potentially within a larger system that manages or analyzes Python code imports.",
    "children_ids": [
        "postcode:models:models.py__*__MODULE__*__CLASS-ImportModel__*__FUNCTION-convert_import_to_metadata"
    ]
}