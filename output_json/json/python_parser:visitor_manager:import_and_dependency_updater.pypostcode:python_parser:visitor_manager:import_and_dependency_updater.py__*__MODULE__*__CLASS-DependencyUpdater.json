{
    "class_name": "DependencyUpdater",
    "decorators": null,
    "bases": null,
    "docstring": "Class responsible for updating dependencies in a module.\n\nMethods:\n    - `update_dependencies` (staticmethod): Updates the dependencies in the module.\n\nExamples:\n    ```Python\n    model_builder = ModuleModelBuilder()\n\n    DependencyUpdater.update_dependencies(model_builder)\n    ```",
    "keywords": null,
    "id": "postcode:python_parser:visitor_manager:import_and_dependency_updater.py__*__MODULE__*__CLASS-DependencyUpdater",
    "file_path": "postcode/python_parser/visitor_manager/import_and_dependency_updater.py",
    "parent_id": "postcode:python_parser:visitor_manager:import_and_dependency_updater.py__*__MODULE",
    "block_type": "CLASS",
    "start_line_num": 265,
    "end_line_num": 336,
    "code_content": "\n\nclass DependencyUpdater:\n    \"\"\"\n    Class responsible for updating dependencies in a module.\n\n    Methods:\n        - `update_dependencies` (staticmethod): Updates the dependencies in the module.\n\n    Examples:\n        ```Python\n        model_builder = ModuleModelBuilder()\n\n        DependencyUpdater.update_dependencies(model_builder)\n        ```\n    \"\"\"\n\n    @staticmethod\n    def update_dependencies(model_builder: ModuleModelBuilder) -> None:\n        \"\"\"\n        Updates the dependencies in the module.\n\n        Args:\n            - model_builder (ModuleModelBuilder): The module model builder to update the dependencies for.\n\n        Returns:\n            - None\n\n        Example:\n            ```Python\n            model_builder = ModuleModelBuilder()\n\n            DependencyUpdater.update_dependencies(model_builder)\n            ```\n        \"\"\"\n        import_model_list: list[\n            ImportModel\n        ] | None = model_builder.module_attributes.imports\n        if model_builder.child_builders:\n            for child_builder in model_builder.child_builders:\n                if (\n                    not child_builder.common_attributes.dependencies\n                    or not import_model_list\n                ):\n                    continue\n\n                dependencies_to_process: tuple[\n                    ImportModel | DependencyModel, ...\n                ] = tuple(child_builder.common_attributes.dependencies)\n                imports_to_process: tuple[ImportModel, ...] = tuple(import_model_list)\n                for dependency in dependencies_to_process:\n                    if isinstance(dependency, DependencyModel):\n                        continue\n\n                    dependency_import_names: list[str] = [\n                        name.name for name in dependency.import_names\n                    ]\n\n                    for import_model in imports_to_process:\n                        import_model_import_names: list[str] = [\n                            name.name for name in import_model.import_names\n                        ]\n\n                        if (\n                            dependency_import_names == import_model_import_names\n                            and dependency.imported_from == import_model.imported_from\n                        ):\n                            child_builder.update_import_dependency(\n                                import_model, dependency\n                            )\n                            break\n",
    "important_comments": null,
    "dependencies": [
        {
            "import_names": [
                {
                    "name": "DependencyModel",
                    "as_name": null,
                    "local_block_id": null
                },
                {
                    "name": "ImportModel",
                    "as_name": null,
                    "local_block_id": null
                },
                {
                    "name": "ImportNameModel",
                    "as_name": null,
                    "local_block_id": null
                },
                {
                    "name": "ImportModuleType",
                    "as_name": null,
                    "local_block_id": null
                }
            ],
            "imported_from": "postcode.models.models",
            "import_module_type": "LOCAL",
            "local_module_id": null
        },
        {
            "import_names": [
                {
                    "name": "DependencyModel",
                    "as_name": null,
                    "local_block_id": null
                },
                {
                    "name": "ImportModel",
                    "as_name": null,
                    "local_block_id": null
                },
                {
                    "name": "ImportNameModel",
                    "as_name": null,
                    "local_block_id": null
                },
                {
                    "name": "ImportModuleType",
                    "as_name": null,
                    "local_block_id": null
                }
            ],
            "imported_from": "postcode.models.models",
            "import_module_type": "LOCAL",
            "local_module_id": null
        },
        {
            "import_names": [
                {
                    "name": "ModuleModelBuilder",
                    "as_name": null,
                    "local_block_id": "postcode:python_parser:model_builders:module_model_builder.py__*__MODULE__*__CLASS-ModuleModelBuilder"
                }
            ],
            "imported_from": "postcode.python_parser.model_builders.module_model_builder",
            "import_module_type": "LOCAL",
            "local_module_id": "postcode:python_parser:model_builders:module_model_builder.py__*__MODULE"
        }
    ],
    "summary": "\nSummary:\n\n        postcode:python_parser:visitor_manager:import_and_dependency_updater.py__*__MODULE__*__CLASS-DependencyUpdater\n\n        \n\nSummary:\n\n        postcode:python_parser:visitor_manager:import_and_dependency_updater.py__*__MODULE__*__CLASS-DependencyUpdater__*__FUNCTION-update_dependencies\n\n        None, None, None\n        , None, None\n        ",
    "children_ids": [
        "postcode:python_parser:visitor_manager:import_and_dependency_updater.py__*__MODULE__*__CLASS-DependencyUpdater__*__FUNCTION-update_dependencies"
    ]
}