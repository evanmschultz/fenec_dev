{
    "function_name": "convert_to_metadata",
    "docstring": "Converts the directory model to a metadata dictionary for ChromaDB.",
    "decorators": null,
    "parameters": null,
    "returns": "dict[str, str | int]",
    "is_method": true,
    "is_async": false,
    "id": "postcode:models:models.py__*__MODULE__*__CLASS-DirectoryModel__*__FUNCTION-convert_to_metadata",
    "file_path": "postcode/models/models.py",
    "parent_id": "postcode:models:models.py__*__MODULE__*__CLASS-DirectoryModel",
    "block_type": "FUNCTION",
    "start_line_num": 492,
    "end_line_num": 505,
    "code_content": "\ndef convert_to_metadata(self) -> dict[str, str | int]:\n    \"\"\"Converts the directory model to a metadata dictionary for ChromaDB.\"\"\"\n\n    return {\n        \"directory_name\": self.directory_name,\n        \"sub_directories\": str(self.sub_directories_ids)\n        if self.sub_directories_ids\n        else \"\",\n        \"children_ids\": self.model_dump_json() if self.children_ids else \"\",\n        \"parent_id\": self.parent_id if self.parent_id else \"\",\n        \"summary\": self.summary if self.summary else \"\",\n    }\n",
    "important_comments": null,
    "dependencies": null,
    "summary": "\nThe `convert_to_metadata` method in an unspecified class creates a metadata dictionary tailored for ChromaDB, with keys for directory attributes and values that are strings or integers. It employs conditional expressions to substitute empty strings for null attributes and uses the `model_dump_json` method to serialize the `children_ids` attribute. The method's return type is explicitly hinted, ensuring the dictionary conforms to the expected structure for ChromaDB.",
    "children_ids": []
}