{
    "function_name": "save_visited_directories",
    "docstring": "Saves a JSON file mapping each visited directory to its Python files.\n\nThe output is saved in a file named 'directory_map.json' within the specified output directory.\n\nArgs:\n    - directory_map_name (str, optional): The name of the output file for the directory map. Defaults to \"directory_map.json\".\n\nExample:\n    ```Python\n    # This example demonstrates how to save visited directories as a JSON map.\n    handler = JSONHandler(directory=\"/path/to/code\", directory_modules={})\n    handler.save_visited_directories(directory_map_name=\"custom_map.json\")\n    ```",
    "decorators": [
        {
            "content": "@logging_decorator(message=\"Saving visited directories\")",
            "decorator_name": "logging_decorator",
            "decorator_args": [
                "message=\"Saving visited directories\""
            ]
        }
    ],
    "parameters": null,
    "returns": "None",
    "is_method": true,
    "is_async": false,
    "id": "postcode:json_management:json_handler.py__*__MODULE__*__CLASS-JSONHandler__*__FUNCTION-save_visited_directories",
    "file_path": "postcode/json_management/json_handler.py",
    "parent_id": "postcode:json_management:json_handler.py__*__MODULE__*__CLASS-JSONHandler",
    "block_type": "FUNCTION",
    "start_line_num": 83,
    "end_line_num": 106,
    "code_content": "\n@logging_decorator(message=\"Saving visited directories\")\ndef save_visited_directories(\n    self, directory_mape_name: str = \"directory_map.json\"\n) -> None:\n    \"\"\"\n        Saves a JSON file mapping each visited directory to its Python files.\n\n        The output is saved in a file named 'directory_map.json' within the specified output directory.\n\n        Args:\n            - directory_map_name (str, optional): The name of the output file for the directory map. Defaults to \"directory_map.json\".\n\n        Example:\n            ```Python\n            # This example demonstrates how to save visited directories as a JSON map.\n            handler = JSONHandler(directory=\"/path/to/code\", directory_modules={})\n            handler.save_visited_directories(directory_map_name=\"custom_map.json\")\n            ```\n        \"\"\"\n\n    output_path: str = self._get_directory_map_output_path(directory_mape_name)\n    self._write_json_directory_map(output_path)\n",
    "important_comments": null,
    "dependencies": null,
    "summary": "\nThe `save_visited_directories` method, decorated with `logging_decorator`, is part of a class responsible for handling directory and file mapping in Python projects. It saves a JSON file, with a customizable name, that records the association between visited directories and contained Python files. The method leverages private helper functions `_get_directory_map_output_path` and `_write_json_directory_map` to determine the save path and serialize the directory map, facilitating project management and codebase navigation.",
    "children_ids": []
}