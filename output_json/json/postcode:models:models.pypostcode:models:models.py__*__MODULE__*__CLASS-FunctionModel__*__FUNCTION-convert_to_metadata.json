{
    "function_name": "convert_to_metadata",
    "docstring": "Converts the function model to a metadata dictionary for ChromaDB.",
    "decorators": null,
    "parameters": null,
    "returns": "dict[str, str | int]",
    "is_method": true,
    "is_async": false,
    "id": "postcode:models:models.py__*__MODULE__*__CLASS-FunctionModel__*__FUNCTION-convert_to_metadata",
    "file_path": "postcode/models/models.py",
    "parent_id": "postcode:models:models.py__*__MODULE__*__CLASS-FunctionModel",
    "block_type": "FUNCTION",
    "start_line_num": 405,
    "end_line_num": 413,
    "code_content": "\ndef convert_to_metadata(self) -> dict[str, str | int]:\n    \"\"\"Converts the function model to a metadata dictionary for ChromaDB.\"\"\"\n\n    return {\n        **self._convert_base_attributes_to_metadata_dict(),\n        **self._convert_function_attributes_to_metadata_dict(),\n    }\n",
    "important_comments": null,
    "dependencies": null,
    "summary": "\nThe `convert_to_metadata` method in the code merges two dictionaries into one using dictionary unpacking, with the resulting dictionary having string keys and values that can be either strings or integers. This merged dictionary is generated by two private methods, `_convert_base_attributes_to_metadata_dict` and `_convert_function_attributes_to_metadata_dict`, and is structured to serve as metadata for ChromaDB.",
    "children_ids": []
}