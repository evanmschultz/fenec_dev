{
    "function_name": "convert_to_metadata",
    "docstring": "Converts the class model to a metadata dictionary for ChromaDB.",
    "decorators": null,
    "parameters": null,
    "returns": "dict[str, str | int]",
    "is_method": true,
    "is_async": false,
    "id": "postcode:models:models.py__*__MODULE__*__CLASS-ClassModel__*__FUNCTION-convert_to_metadata",
    "file_path": "postcode/models/models.py",
    "parent_id": "postcode:models:models.py__*__MODULE__*__CLASS-ClassModel",
    "block_type": "FUNCTION",
    "start_line_num": 324,
    "end_line_num": 331,
    "code_content": "\ndef convert_to_metadata(self) -> dict[str, str | int]:\n    \"\"\"Converts the class model to a metadata dictionary for ChromaDB.\"\"\"\n    return {\n        **self._convert_base_attributes_to_metadata_dict(),\n        **self._convert_class_attributes_to_metadata_dict(),\n    }\n",
    "important_comments": null,
    "dependencies": null,
    "summary": "\nThe `convert_to_metadata` method in the code merges base and class-specific attributes from a class instance into a metadata dictionary with string keys and mixed-type values, formatted for ChromaDB, using dictionary unpacking to combine the results of two internal methods.",
    "children_ids": []
}