{
    "function_name": "_get_models_to_update",
    "docstring": "Returns all models that need to be updated.\n\nReturns:\n    - list[ModelType]: List of models to be updated.",
    "decorators": null,
    "parameters": null,
    "returns": "list[ModelType]",
    "is_method": true,
    "is_async": false,
    "id": "postcode:ai_services:summarizer:summarization_mapper.py__*__MODULE__*__CLASS-SummarizationMapper__*__FUNCTION-_get_models_to_update",
    "file_path": "postcode/ai_services/summarizer/summarization_mapper.py",
    "parent_id": "postcode:ai_services:summarizer:summarization_mapper.py__*__MODULE__*__CLASS-SummarizationMapper",
    "block_type": "FUNCTION",
    "start_line_num": 50,
    "end_line_num": 67,
    "code_content": "\ndef _get_models_to_update(self) -> list[ModelType]:\n    \"\"\"\n        Returns all models that need to be updated.\n\n        Returns:\n            - list[ModelType]: List of models to be updated.\n        \"\"\"\n\n    models_to_update: list[ModelType] = []\n    for model in self.all_models:\n        for module_id in self.module_ids_to_update:\n            if module_id in model.id:\n                models_to_update.append(model)\n                break\n\n    return models_to_update\n",
    "important_comments": null,
    "dependencies": null,
    "summary": "\nThe class method `_get_models_to_update` returns a deduplicated list of model instances (with type hints) that require updates, determined by matching their IDs against a predefined list of module IDs, optimizing the process with an early loop exit upon a match.",
    "children_ids": []
}