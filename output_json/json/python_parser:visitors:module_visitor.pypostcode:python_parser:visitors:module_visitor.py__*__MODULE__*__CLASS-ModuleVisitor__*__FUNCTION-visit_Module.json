{
    "function_name": "visit_Module",
    "docstring": "Visits the root Module node of the CST.\n\nExtracts various components of the module such as docstring, header, footer, and code content, and\nupdates the module builder with these details.",
    "decorators": null,
    "parameters": null,
    "returns": "bool | None",
    "is_method": true,
    "is_async": false,
    "id": "postcode:python_parser:visitors:module_visitor.py__*__MODULE__*__CLASS-ModuleVisitor__*__FUNCTION-visit_Module",
    "file_path": "postcode/python_parser/visitors/module_visitor.py",
    "parent_id": "postcode:python_parser:visitors:module_visitor.py__*__MODULE__*__CLASS-ModuleVisitor",
    "block_type": "FUNCTION",
    "start_line_num": 65,
    "end_line_num": 103,
    "code_content": "\ndef visit_Module(self, node: libcst.Module) -> bool | None:\n    \"\"\"\n        Visits the root Module node of the CST.\n\n        Extracts various components of the module such as docstring, header, footer, and code content, and\n        updates the module builder with these details.\n        \"\"\"\n\n    docstring: str | None = node.get_docstring()\n    header: list[str] = module_functions.extract_content_from_empty_lines(\n        node.header\n    )\n    footer: list[str] = module_functions.extract_content_from_empty_lines(\n        node.footer\n    )\n    content: str = node.code if node.code else \"\"\n    position_data: PositionData = self.get_node_position_data(node)\n    (\n        self.builder.set_docstring(docstring)\n        .set_header_content(header)\n        .set_footer_content(footer)\n        .set_code_content(content)\n        .set_start_line_num(position_data.start)\n        .set_end_line_num(position_data.end)\n    )\n    standalone_blocks: list[\n        NodeAndPositionData\n    ] = standalone_code_block_functions.gather_standalone_lines(node.body, self)\n    standalone_block_models: list[\n        StandaloneBlockModelBuilder\n    ] = standalone_code_block_functions.process_standalone_blocks(\n        code_blocks=standalone_blocks,\n        parent_id=self.id,\n        file_path=self.builder.common_attributes.file_path,\n    )\n    for standalone_block_model in standalone_block_models:\n        self.builder.add_child_builder(standalone_block_model)\n",
    "important_comments": null,
    "dependencies": null,
    "summary": null,
    "children_ids": []
}