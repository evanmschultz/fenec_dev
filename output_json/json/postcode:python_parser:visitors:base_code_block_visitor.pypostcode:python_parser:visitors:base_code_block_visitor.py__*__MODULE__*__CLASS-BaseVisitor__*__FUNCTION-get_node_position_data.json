{
    "function_name": "get_node_position_data",
    "docstring": "Retrieves position data for a given CST node.\n\nExtracts the start and end line numbers of the node in the source code.\n\nArgs:\n    node (libcst.CSTNode): The CST node to get position data for.\n\nReturns:\n    PositionData: An object containing start and end line numbers of the node.",
    "decorators": null,
    "parameters": null,
    "returns": "PositionData",
    "is_method": true,
    "is_async": false,
    "id": "postcode:python_parser:visitors:base_code_block_visitor.py__*__MODULE__*__CLASS-BaseVisitor__*__FUNCTION-get_node_position_data",
    "file_path": "postcode/python_parser/visitors/base_code_block_visitor.py",
    "parent_id": "postcode:python_parser:visitors:base_code_block_visitor.py__*__MODULE__*__CLASS-BaseVisitor",
    "block_type": "FUNCTION",
    "start_line_num": 65,
    "end_line_num": 91,
    "code_content": "\ndef get_node_position_data(\n    self,\n    node: libcst.CSTNode,\n) -> PositionData:\n    \"\"\"\n        Retrieves position data for a given CST node.\n\n        Extracts the start and end line numbers of the node in the source code.\n\n        Args:\n            node (libcst.CSTNode): The CST node to get position data for.\n\n        Returns:\n            PositionData: An object containing start and end line numbers of the node.\n        \"\"\"\n\n    position_data: CodeRange | type[_UNDEFINED_DEFAULT] = self.get_metadata(\n        WhitespaceInclusivePositionProvider, node\n    )\n\n    start, end = 0, 0\n    if isinstance(position_data, CodeRange):\n        start: int = position_data.start.line\n        end: int = position_data.end.line\n    return PositionData(start=start, end=end)\n",
    "important_comments": null,
    "dependencies": null,
    "summary": "\nThe `get_node_position_data` method retrieves the start and end line numbers of a `libcst.CSTNode` from the source code. It uses `get_metadata` with `WhitespaceInclusivePositionProvider` to obtain `position_data`, checks if this is a `CodeRange` instance to extract line numbers, and returns a `PositionData` object with these values, defaulting to 0 if the `position_data` is not a `CodeRange`.",
    "children_ids": []
}