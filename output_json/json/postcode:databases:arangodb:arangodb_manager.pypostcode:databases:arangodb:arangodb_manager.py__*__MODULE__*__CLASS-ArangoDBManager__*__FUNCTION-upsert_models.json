{
    "function_name": "upsert_models",
    "docstring": "Upserts a list of models into the ArangoDB database.\n\nArgs:\n    - module_models (list[ModelType]): The list of models to be upserted.\n\nReturns:\n    - ArangoDBManager: The ArangoDBManager instance.",
    "decorators": null,
    "parameters": null,
    "returns": "No return annotation",
    "is_method": true,
    "is_async": false,
    "id": "postcode:databases:arangodb:arangodb_manager.py__*__MODULE__*__CLASS-ArangoDBManager__*__FUNCTION-upsert_models",
    "file_path": "postcode/databases/arangodb/arangodb_manager.py",
    "parent_id": "postcode:databases:arangodb:arangodb_manager.py__*__MODULE__*__CLASS-ArangoDBManager",
    "block_type": "FUNCTION",
    "start_line_num": 68,
    "end_line_num": 83,
    "code_content": "\ndef upsert_models(self, module_models: list[ModelType]) -> \"ArangoDBManager\":\n    \"\"\"\n        Upserts a list of models into the ArangoDB database.\n\n        Args:\n            - module_models (list[ModelType]): The list of models to be upserted.\n\n        Returns:\n            - ArangoDBManager: The ArangoDBManager instance.\n        \"\"\"\n\n    for model in module_models:\n        self._upsert_model(model)\n    return self\n",
    "important_comments": null,
    "dependencies": null,
    "summary": "\nThe `upsert_models` method in the `ArangoDBManager` class accepts a typed list of models (`list[ModelType]`) and sequentially upserts each model into an ArangoDB database using the private helper method `_upsert_model`. This method is designed for method chaining, as it returns the `ArangoDBManager` instance upon completion.",
    "children_ids": []
}