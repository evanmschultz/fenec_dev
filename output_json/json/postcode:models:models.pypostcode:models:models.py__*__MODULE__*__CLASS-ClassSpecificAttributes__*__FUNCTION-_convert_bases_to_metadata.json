{
    "function_name": "_convert_bases_to_metadata",
    "docstring": "Converts the bases to a metadata string.",
    "decorators": null,
    "parameters": null,
    "returns": "str",
    "is_method": true,
    "is_async": false,
    "id": "postcode:models:models.py__*__MODULE__*__CLASS-ClassSpecificAttributes__*__FUNCTION-_convert_bases_to_metadata",
    "file_path": "postcode/models/models.py",
    "parent_id": "postcode:models:models.py__*__MODULE__*__CLASS-ClassSpecificAttributes",
    "block_type": "FUNCTION",
    "start_line_num": 271,
    "end_line_num": 275,
    "code_content": "\ndef _convert_bases_to_metadata(self) -> str:\n    \"\"\"Converts the bases to a metadata string.\"\"\"\n    return self.model_dump_json() if self.bases else \"\"\n",
    "important_comments": null,
    "dependencies": null,
    "summary": "\nThe `_convert_bases_to_metadata` method within a class checks for non-empty base attributes and serializes the model data into JSON using `model_dump_json` if bases are present, otherwise returning an empty string.",
    "children_ids": []
}