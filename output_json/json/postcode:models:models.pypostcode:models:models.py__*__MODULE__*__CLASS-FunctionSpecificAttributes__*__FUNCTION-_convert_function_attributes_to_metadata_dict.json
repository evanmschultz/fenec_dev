{
    "function_name": "_convert_function_attributes_to_metadata_dict",
    "docstring": "Converts the function attributes to a metadata dictionary for ChromaDB.",
    "decorators": null,
    "parameters": null,
    "returns": "dict[str, str | bool]",
    "is_method": true,
    "is_async": false,
    "id": "postcode:models:models.py__*__MODULE__*__CLASS-FunctionSpecificAttributes__*__FUNCTION-_convert_function_attributes_to_metadata_dict",
    "file_path": "postcode/models/models.py",
    "parent_id": "postcode:models:models.py__*__MODULE__*__CLASS-FunctionSpecificAttributes",
    "block_type": "FUNCTION",
    "start_line_num": 362,
    "end_line_num": 375,
    "code_content": "\ndef _convert_function_attributes_to_metadata_dict(self) -> dict[str, str | bool]:\n    \"\"\"Converts the function attributes to a metadata dictionary for ChromaDB.\"\"\"\n\n    return {\n        \"function_name\": self.function_name,\n        \"docstring\": self._convert_docstring_to_metadata(),\n        \"decorators\": self._convert_decorators_to_metadata(),\n        \"parameters\": self._convert_parameters_to_metadata(),\n        \"returns\": self._convert_returns_to_metadata(),\n        \"is_method\": self.is_method,\n        \"is_async\": self.is_async,\n    }\n",
    "important_comments": null,
    "dependencies": null,
    "summary": "\nThe `_convert_function_attributes_to_metadata_dict` method within a class serializes a function's characteristics into a metadata dictionary, utilizing specialized helper methods to transform the function's name, docstring, decorators, parameters, and return type into a structured format. It also includes boolean entries to denote if the function is a class method or an asynchronous coroutine, facilitating its integration with ChromaDB.",
    "children_ids": []
}