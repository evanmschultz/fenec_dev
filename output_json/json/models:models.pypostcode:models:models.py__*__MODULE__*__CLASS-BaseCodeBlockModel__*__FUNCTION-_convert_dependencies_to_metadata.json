{
    "function_name": "_convert_dependencies_to_metadata",
    "docstring": "Converts the dependencies to a metadata string.",
    "decorators": null,
    "parameters": null,
    "returns": "str",
    "is_method": true,
    "is_async": false,
    "id": "postcode:models:models.py__*__MODULE__*__CLASS-BaseCodeBlockModel__*__FUNCTION-_convert_dependencies_to_metadata",
    "file_path": "postcode/models/models.py",
    "parent_id": "postcode:models:models.py__*__MODULE__*__CLASS-BaseCodeBlockModel",
    "block_type": "FUNCTION",
    "start_line_num": 142,
    "end_line_num": 158,
    "code_content": "\ndef _convert_dependencies_to_metadata(self) -> str:\n    \"\"\"Converts the dependencies to a metadata string.\"\"\"\n\n    dependencies_str: str = \"\"\n\n    if self.dependencies:\n        for dependency in self.dependencies:\n            if isinstance(dependency, ImportModel):\n                dependencies_str += f\"{dependency.convert_import_to_metadata()}\\n\"\n            elif isinstance(dependency, DependencyModel):\n                dependencies_str += (\n                    f\"{dependency.convert_dependency_to_metadata()}\\n\"\n                )\n\n    return dependencies_str\n",
    "important_comments": null,
    "dependencies": null,
    "summary": null,
    "children_ids": []
}