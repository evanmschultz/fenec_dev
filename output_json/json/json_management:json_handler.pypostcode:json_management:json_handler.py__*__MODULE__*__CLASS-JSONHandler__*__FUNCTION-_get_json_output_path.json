{
    "function_name": "_get_json_output_path",
    "docstring": "Gets the output path for a JSON file.",
    "decorators": null,
    "parameters": null,
    "returns": "str",
    "is_method": true,
    "is_async": false,
    "id": "postcode:json_management:json_handler.py__*__MODULE__*__CLASS-JSONHandler__*__FUNCTION-_get_json_output_path",
    "file_path": "postcode/json_management/json_handler.py",
    "parent_id": "postcode:json_management:json_handler.py__*__MODULE__*__CLASS-JSONHandler",
    "block_type": "FUNCTION",
    "start_line_num": 82,
    "end_line_num": 96,
    "code_content": "\ndef _get_json_output_path(self, file_path: str, json_output_directory: str) -> str:\n    \"\"\"Gets the output path for a JSON file.\"\"\"\n\n    if \"DIRECTORY\" in file_path:\n        # Handle the file_path with 'DIRECTORY' differently\n        # Customize this part as needed. Here's an example:\n        safe_file_path = file_path.replace(\"/\", \":\")\n        return str(Path(json_output_directory) / f\"{safe_file_path}.json\")\n    else:\n        # Handle regular file paths\n        relative_path: Path = Path(file_path).relative_to(Path(self.directory))\n        safe_relative_path: str = str(relative_path).replace(\"/\", \":\").rstrip(\".py\")\n        return str(Path(json_output_directory) / f\"{safe_relative_path}.json\")\n",
    "important_comments": null,
    "dependencies": null,
    "summary": "\nSummary:\n\n        postcode:json_management:json_handler.py__*__MODULE__*__CLASS-JSONHandler__*__FUNCTION-_get_json_output_path\n\n        None, None, None\n        ",
    "children_ids": []
}