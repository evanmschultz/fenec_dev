{
    "function_name": "_is_local_import",
    "docstring": "Returns boolean indicating whether the import is local to the project.",
    "decorators": null,
    "parameters": null,
    "returns": "bool",
    "is_method": true,
    "is_async": false,
    "id": "postcode:python_parser:visitor_manager:import_and_dependency_updater.py__*__MODULE__*__CLASS-ImportUpdater__*__FUNCTION-_is_local_import",
    "file_path": "postcode/python_parser/visitor_manager/import_and_dependency_updater.py",
    "parent_id": "postcode:python_parser:visitor_manager:import_and_dependency_updater.py__*__MODULE__*__CLASS-ImportUpdater",
    "block_type": "FUNCTION",
    "start_line_num": 152,
    "end_line_num": 156,
    "code_content": "\ndef _is_local_import(self, import_model: ImportModel) -> bool:\n    \"\"\"Returns boolean indicating whether the import is local to the project.\"\"\"\n    return import_model.import_module_type == ImportModuleType.LOCAL\n",
    "important_comments": null,
    "dependencies": null,
    "summary": "\nThe code contains a method `_is_local_import` that assesses the locality of an import by comparing the `import_module_type` attribute of the `ImportModel` parameter against the `ImportModuleType.LOCAL` enum value, returning `True` if they match, indicating a local import, or `False` otherwise.",
    "children_ids": []
}