{
    "function_name": "create_summarization_map",
    "docstring": null,
    "decorators": null,
    "parameters": null,
    "returns": "list[ModelType]",
    "is_method": true,
    "is_async": false,
    "id": "postcode:ai_services:summarizer:summarization_mapper.py__*__MODULE__*__CLASS-SummarizationMapper__*__FUNCTION-create_summarization_map",
    "file_path": "postcode/ai_services/summarizer/summarization_mapper.py",
    "parent_id": "postcode:ai_services:summarizer:summarization_mapper.py__*__MODULE__*__CLASS-SummarizationMapper",
    "block_type": "FUNCTION",
    "start_line_num": 57,
    "end_line_num": 86,
    "code_content": "\ndef create_summarization_map(self) -> list[ModelType]:\n    self._set_models_to_update()\n    logging.info(\"Set models to update\")\n\n    for model in self.models_to_update:\n        logging.debug(f\"Setting inbound models in summarization map: {model.id}\")\n        self._set_inbound_models_in_summarization_map(model.id)\n        self.temp_map.append(model)\n\n        self.model_visited_in_db.remove(model.id)\n        self.summarization_map.extend(self.temp_map)\n        self.temp_map = []\n\n    for model in self.models_to_update:\n        logging.debug(f\"Setting outbound models in summarization map: {model.id}\")\n        self._set_outbound_models_in_summarization_map(model.id)\n        self.summarization_map.extend(self.temp_map)\n        self.temp_map = []\n\n    logging.info(\"Created summarization map\")\n    summary_ids: set[str] = set()\n    summary_map: list[ModelType] = []\n    for model in self.summarization_map[::-1]:\n        if model.id not in summary_ids:\n            summary_map.append(model)\n            summary_ids.add(model.id)\n\n    return summary_map[::-1]\n",
    "important_comments": null,
    "dependencies": null,
    "summary": "\nSummary:\n\n        postcode:ai_services:summarizer:summarization_mapper.py__*__MODULE__*__CLASS-SummarizationMapper__*__FUNCTION-create_summarization_map\n\n        None, None, None\n        ",
    "children_ids": []
}